---
layout: default
title: Viczián István - JTechLog - Java/Jáva napló archívum
description: Viczián István - JTechLog - Java/Jáva napló archívum
keywords: Viczián István, Java, Jáva, WebLog, Blog, TechLog, JTechLog
---

			<div id="jtechlog-center">
                            <div class="message">
                                <p>2008. november 24-től újraindult a JTechLog, amit 2003. novemberében hagytam abba, 
             és elérhető a <a href="http://jtechlog.blogspot.hu">http://jtechlog.blogspot.hu</a> címen.
             Itt csak az archívum marad meg.</p>                    
         </div>
				<div class="centerbox">
                                        <h1>JTechLog - bevezetés</h1>
					<p>
						<em>Viczi, 2004. február 28.</em>
					</p>
					<br />
					<p>
              Mi is ez? Régóta tipródok az ötleten, hogy indítani kéne egy
              magyar nyelvű Java (magyarosan Jáva, de ettől ódzkodom)
              portált. Cikkekkel, hírekkel, fórumokkal, stb.
              Sajnos az erőforrásaim túl szegények egy ilyen ötlet
              megvalósításához (azért aki csatlakozni szeretne, bátran
              írjon), ezért indulásként kitaláltam, hogy írok egy <a href="http://www.index.hu/velemeny/imho/blog/">WebLog-okhoz</a>
              hasonló TechLog-ot, ami általában remélhetőleg csak szakmai
              tapasztalatokról fog szólni, híreket, információkat próbálok
              belezsúfolni egy bejegyzésbe, a Blog-okhoz hasonló kötetlen
              hangnemben, kerülve a hírportálok száraz, parlamenti
              suttogós, pártatlan stílusát. És miért JTechLog? Hát kedvenc
              programozási nyelvem miatt, ami a Java. Tehát ha friss
              hírekre, tapasztalatokra, véleményekre és szívásokra vagy
              kíváncsi a Java nyelvvel és hozzá kapcsolódó technológiákkal
              kapcsolatban, akkor megéri naponta ide látogatni.
             </p>
					<p>
             Abban az esetben, ha a Google keresővel találtál rá az oldalamra, akkor a 
             keresett szavak <span class="searchword">ezzel a stílussal</span> vannak kiemelve, így
             könnyebben megtalálod, amit keresel.
             </p>
                                        <p>
						<em>Viczi, 2002. november 19.</em>
					</p>
					<br />
					
						<blockquote cite="http://index.hu/tech/net/blogzz/"><p>"Weblog: napló a weben, dinamikus frissítésű személyes 
             tematikájú, hangvételű, stílusú, egocentrikus online publikáció."</p></blockquote>
					
					<p>
						<a href="http://index.hu/tech/net/blogzz/">Index.Hu</a>
					</p>
				</div>
				<div class="centerbox">
				  <div class="centerimg">
					<script type="text/javascript">
					<!--
					googleAdSense(468, 60, "dark");
					// -->
					</script>
					<script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
				  </div>	
				</div>
				<div class="centerbox">
					<a name="20021119"/>
					<p>
              Természetesen gyorsan fel is iratkoztam a <a href="http://javasite.bme.hu:8081/levlista/index.jsp">Java Listára</a>, hogy az
              ott történő eseményeket is nyomon kövessem. Érdekes, néha
              olyan deja-vu érzésem van, egy csomó téma általában havonta,
              kéthavonta visszatér. Azt hiszem tényleg érdemes rá pakolni
              egy keresőt az archívumra. Bár a Google is elég szépen
              behozza, de azért mégis. Csak hogy stílusos legyen, érdemes
              lenne használni a <a href="http://jakarta.apache.org/lucene/docs/index.html">Jakarta
              Lucene</a> keresőmotort, ami szöveg indexelését, szöveg
              keresést valósít meg. Felvitelkor mezőkből álló
              dokumentumokat kell felvinni, kereséskor összetett
              feltételeket lehet megadni. A <a href="http://jakarta.apache.org">Jakarta Project</a> darabjai
              amúgy is a szívemhez nőttek.
             </p>
			   <div class="centerimgbrd">
			   <img src="http://jakarta.apache.org/images/jakarta-logo.gif" alt="Apache Jakarta" width="505" height="48"/>
			   </div>
			 <p>
              <em>Viczi, 2002. november 19.</em>
             </p>
				</div>
				<div class="centerbox">
					<a name="20021120"/>
					<p>
              Mostanában gyakran gondolkodom egy kulcsszó alapú,
              hiperlinkes tudásbázis megoldáson. Akár definíció vagy
              rövidítés gyűjteményen, mint a <a href="http://whatis.techtarget.com/">WhatIs?Com</a>. Érdekes kezdeményezés a <a href="http://c2.com/cgi/wiki">WikiWikiWeb</a>,
              mellyel egy dinamikusan növő site-ot lehet építeni, méghozzá
              úgy, hogy az összes "NagyBetűsSzóEgybeÍrva" alakú szó alapba
              linkként jelenik meg. Ha már létezik a kulcsszó, akkor a
              hozzá tartozó lapra történik hivatkozás, ha nem létezik,
              akkor te írhatod meg HTML formon, egyszerű szintaktikai
              szabályokat betartva. Az alapötlet ez, rengeteg klónja
              létezik, Java nyelven is. Szervlet, JSP technológiákra
              épülnek, vagy esetleg egy komolyabb keretrendszerre. Az
              érdekesebbek nevei: <a href="http://c2.com/cgi/wiki?KwikWiki">KwikWiki</a>, <a href="http://c2.com/cgi/wiki?ChikiWiki">ChikiWiki</a>, <a href="http://c2.com/cgi/wiki?FrikiServlet">FrikiServlet</a>, <a href="http://c2.com/cgi/wiki?JikiJikiJava">JikiJikiJava</a>.
              Szerintem jó ötlet, lelkesedek.
              Itt van egy <a href="http://c2.com/cgi/wiki?JavaLanguage">csomó kulcsszó</a> a
              Java nyelvről is.
             </p>
              <em>Viczi, 2002. november 20.</em>
				</div>
				<div class="centerbox">
					<a name="20021121"/>
					<p>
              Előbb utóbb mindenki beleesik a csapdába, és Java nyelven
              nyomtatnia kell. Ekkor kezdhet saját framework-öt írni, ha
              speciális igényei vannak. Ilyenkor jön a nagyszerű <a href="http://java.sun.com/products/java-media/2D/forDevelopers/sdk12print.html">
              Java Printing API</a> minimális számú szolgáltatással.
              Persze vannak varázsszavak is, amiket mindig be lehet dobni
              ennél a témánál. Itt is van a <a href="http://xml.apache.org/fop/index.html">FOP</a>, mely igen
              robosztus, XML-t és <a href="http://www.w3.org/TR/2001/REC-xsl-20011015/">XSL-FO</a>
              formátumot használ bemenetként, és PDF, PS, XML, és sok
              egyéb más formátumot kimenetként. Erre épül a <a href="http://cocoon.apache.org/2.0/">Cocoon</a> publikáló
              rendszer is, mely ugyanezt valósítja meg szervlet
              környezetben, és jó kis magyar <a href="http://javasite.bme.hu/dokument/cocoon/cocoon.html">doksi</a>
              van fenn róla a <a href="http://javasite.bme.hu">JFT</a>-n
              Paller Gábor billentyűzetéből. Csak riportok készítéséhez
              jöhet jól a <a href="http://jasperreports.sourceforge.net">Jasper Reports</a>,
              és a <a href="http://www.object-refinery.com/jfreereport/">JFreeReport</a>.
              Attól függetlenül próbáljátok meg elkerülni a nyomtatást.
             </p>
					<em>
              Viczi, 2002. november 21.
             </em>
				</div>
				<div class="centerbox">
					<a name="20021122"/>
					<p>
              Rémálmomban ? jeleket látok a kedvenc ő és ű ékezetes
              karakterek helyén. Azt hiszem, már mindenki szívott ezekkel
              jó nagyokat, mert hiába menő fogalom a szép hosszú
              Internationalization (I18N), és annak testvérkéje a
              Localization (L10N). Szervlet, JSP és JDBC körökben gyakran
              előjövő problémák, és a Unicode sem hozta meg sajnos a várva
              várt megoldást, még a beépített Startrack-es
              karakterkészletével sem, azért adjunk időt neki. Mire
              figyeljünk, ha problémánk akad:
             </p>
					<ul>
						<li>
               Állítsuk be az adatbázis karakterkódolását.
              </li>
						<li>
               Megjelenítendő lap karakterkészletet állítsuk
               ISO-8859-2-re, mindenképp a tartalom kírása előtt.
              </li>
						<li>
               Form esetén a böngésző ugyanolyan kódolással fogja
               visszaküldeni az értékeket, mint a lap kódolása, ezt
               érdemes Unicode-dá konvertálni.
              </li>
						<li>
               Fájlból olvasáskor az InputStreamReader és íráskor az
               OutputStreamWriter konstruktorának adjuk át a
               karakterkódolást.
              </li>
						<li>
               Ha kódból írunk ki ékezetes karaktereket, akkor a
               fordítónak meg kell adni a karakterkódolást.
              </li>
						<li>
               Használhatunk Unicode kerülő szekvenciákat.
              </li>
						<li>
               Ha semmi sem megy, használjuk a bűvős átalakítást: 
<pre>
String orig = request.getParameter("name");
String real = new String(orig.getBytes("ISO8859_1"),"ISO8859_2");
</pre>
						</li>
					</ul>
					<p>
              Természetesen így is sokat fogunk gányolni, és soha sem
              fogjuk megtudni, hogy hol hibáztunk. Árvíztűrő tükörfúrógép.
              Agyamra megy.
             </p>
					<em>
              Viczi, 2002. november 22.
             </em>
				</div>
				<div class="centerbox">
					<a name="20021123"/>
					<p>
              Szabolcs szerint túl száraz. Ő a <a href="http://www.ibm.com/software/awdtools/vajava/">VAJAVA</a>-t és
              az <a href="http://www.oracle.com/ip/deploy/database/oracle9i/">Oracle-t</a>
              szeretné fakkolni. Ha már a nagy neveknél tartunk,
              kéthavonta rámjön, hogy tegyek fel valami jó kis IDE-t, hogy
              szokjam a FAR helyett. Nem rég (pár hónapja) szedtem a <a href="http://www.borland.com/jbuilder/index.html">Borland
              JBuilder 5.0 Enterprise</a> cuccost, és máris hiányzott,
              hogy se a görgő nem ment, se számozás a sorok elején, se <a href="http://ant.apache.org/">Jakarta Ant</a>
              támogatás. Miközben kerestem hozzá ilyeneket (<a href="http://czerwonykapturek.tripod.com/">jbWheel</a>, <a href="http://antrunner.sourceforge.net/">AntRunner</a>), láttam,
              hogy már <a href="http://www.prog.hu/news.php?qnid=795">kijött</a> a nyolcas.
              Dolgoznak a fiúk. Persze mindkettőt támogatja. Nomeg a
              Studio is nyomul, ami Java profiler-t (OptimizeIt), Rational
              Rose stuffot (az megér majd egy külön anyázó bejegyzést,
              Szabolcs örülni fog), alkalmazás szervert, és a Dreamweaver
              MX-et tartalmazza (erről csak szuprémuszokban lehet
              beszélni). Igazuk van, egyszerűbb ezeket belevásárolni, mint
              koppintani. De miért hívnak mindent Studio-nak mostanság?
              IBM Websphere Studio, Sun ONE Studio, VisualStudio... Én
              maradok a FAR Studio-nál.
             </p>
					<em>
              Viczi, 2002. november 23.
             </em>
				</div>
				<div class="centerbox">
					<a name="20021123e"/>
					<p>
              A Studio hegyekről jut eszembe, hogy a Microfocusnál láttam:
              Cobol .Net. Ennek persze nincs köze a Javahoz, de jó poén.
              Aminek viszont értelme is van, hogy a Borland megállapodott
              a TogetherSoft felvásárlásáról. Ez több szempontból is
              érdekes, mert a Borland és Rational között hagyományosan jó
              kapcsolat volt és termékeik mindig támogatták egymást. Mint
              Viczi írta a Rose még része is a Borland Enterprise
              Studionak. Bár ezek után valószínűleg nem sokáig, ami nem is
              baj, mert a Rose-nál bugosabb és használhatatlanabb cucc
              kevés van. Végre valami értelmeset is csinál a Borland pár
              évnyi leépülés után. Na hajrá.
             </p>
					<p><em>
              ESz, 2002. november 23.</em>
             </p>
				</div>
				<div class="centerbox">
					<a name="20021124"/>
					<p>
              Eseménytelenül telik a hétvége, csak a Borland JBuilder 5
              szívat egy kicsit. Azt mondja, mikor végre futtatni
              szeretném végre a kész programot, hogy
             </p>
					<pre>
java.io.IOException: CreateProcess: C:\j2sdk1.4.0\lib\bin\javaw -classpath \
	"rizsa" boo.Main error=3</pre>
					<p>
              Erre én akadok is ki, elő a Google, a levelező listákban
              csak egy bejegyzés, szívdobogva klikkelek, igen, nem. Német.
              No, elő a rég elhalványult német tudásomat, "Coole Namen für
              Projekte, Pakete, Klassen...". Kiderül, hogy a kedves, hiába
              a D:\-re teszem fel, ő mégis egy C:\-beli JDK-ra hivatkozik.
              Ami persze látszik is már az elérési úton. Nosza
              Tools\Configure JDKs menü. Megy.</p>
					<p>
              Aki tesztelni akarja a Java tudását, az például a Sunnál is
              megteheti, több 
              <a href="http://java.sun.com/developer/Quizzes/index-alpha.html">kvíz</a>
              is elérhető náluk. Akinek ez már megy, az beszerezheti a <a href="http://suned.sun.com/US/certification/java/java_progj2se.html">
              Sun Certified Programmer</a> minősítést is.
             </p>
					<em>
              Viczi, 2002. november 24.
             </em>
				</div>
				<div class="centerbox">
					<a name="20021125"/>
					<p>
              Nem tudom, kinek volt már ideje, hogy profiler-ekkel
              játszon, mert általában egy project keretein belül nem
              tesztelésre szokták a legtöbb időt fordítani, ha meg nem
              megfelelő a szoftver teljesítménye, vegyünk alá hardvert.
              Aki igényesebb, vagy valami nagyon nem stimmel a
              rendszerében sebesség, memóriahasználat vagy szinkronizáció
              terén, vagy alaposabban ki akarja tesztelni, azoknak valók a
              profiler-ek. Létezik erre fapados módszer is, a JVM-et
              megfelelően indítva stacktrace kérésekor (tipikusan Ctrl +
              Break), vagy kilépéskor szöveges vagy bináris fájlba íródik
              a dump. A szöveges fájlt nézhetjük bármilyen
              szövegszerkesztőből, abszolút emészthetetlen. Vagy a bináris
              fájlra ereszthetünk a Heap Analysis
              Tool eszközt, mely indít egy beépített web-szervert, és
              az adatokat HTML formátumban kapjuk, szépen összelinkelve.
              No ezzel dolgozni; halál. Azért érdemes belenézni, mit <a href="http://java.sun.com/developer/onlineTraining/Programming/JDCBook/perf3.html">
              ír erről</a> a Sun. De aki kevésbé mazohista, használhat
              színes, szagos eszközt, ami grafikusan, real-time jelez ki
              minden szükséges információt (betöltött osztályok, aktív
              objektumok száma, memóriahasználat, szálak, kód
              kihasználtsága, egyéb csilli-villik). Azért ezeknek is van
              hátrányuk, drágák, és iszonyatosan belassítják az
              alkalmazást (ez kisebb mértékben jellemző a fapados
              megoldásra). Erre a Borland <a href="http://www.borland.com/optimizeit/">OptimizeIt</a>
              szoftverét ajánlom (már említettem a Studio-ban benne van),
              illetve ódákat zengnek a <a href="http://www.sitraka.com/software/jprobe/">JProbe</a> nevűről
              is, amit még nem próbáltam, illetve a <a href="http://www.ej-technologies.com/products/jprofiler/overview.html">
              JProfiler</a> melyet sehogy sem sikerült felraknom.</p>
					<p>
               Mellesleg a Macromedia-nak is Studio-ja van. Kiváncsi
              vagyok, mi lesz az újabb trendi...
             </p>
					<em>
              Viczi, 2002. november 25.
             </em>
				</div>
				<div class="centerbox">
					<a name="20021126"/>
					<p>
              Lassan végzek az O'Reilly-Kossuth kiadású <a href="http://www.libri.hu/cgi-bin/libri/htmlos.cgi/3535.8.4288286848839372530?">
              Java szervletek programozása</a> könyvvel, mindenkinek
              ajánlom, aki csak egy kicsit is foglalkozik a szervletekkel.
              A könyv tulajdonosa amellett, hogy egy csomó információt
              kap, jogosan használhatja a Jason Hunter által írt Java
              csomagot, mely egy csomó, segítő osztályt tartalmaz, melyek
              a forrása is hozzáférhető, és a könyvben magyarázza is
              azokat. Ezt le lehet tölteni a <a href="http://www.servlets.com/index.tea">Servlets.Com</a> oldalról, ami
              amúgy is rengeteg infót tartalmaz a szervletekről. Nemrég
              (2002. nov. 5.) jelent meg a legújabb <a href="http://www.servlets.com/cos/cos-05Nov2002.zip">verzió</a>,
              érdemes lerántani.</p>
					<p>
               Ha már úgyis a szervleteknél tartunk, a <a href="http://www.jguru.com">JGuru</a>-n rátaláltam, <a href="http://www.jguru.com/faq/view.jsp?EID=511752">hogyan</a>
              lehet megoldani a context-ek közötti session átvitelt.
              Némelyik szervletmotor (de szép magyar szó, itt pl. a
              Tomcat-re lehet gondolni), támogatja a crosscontext dolgot,
              további infó RTFM. De hogy mit keres egy Visual Strudio .NET
              hirdetés ezen az oldalon?
             </p>
					<em>
              Viczi, 2002. november 26.
             </em>
				</div>
				<div class="centerbox">
					<a name="20021127"/>
					<p>
              Nem tudom, miért vagyok mostanában úgy oda a Borlandért, de
              mindig beleütközök. Először is megjelent egy <a href="http://www.terminal.hu/newsread.php?id=26201611023418">cikk</a>
              a <a href="http://www.terminal.hu">Terminálon</a>, ami a
              Borland JBuilder 8-at és OptimizeIt 5-öt tolja a magasba, és
              a lap alján látom, hogy van magyar honlapjuk is. No, rá is
              <a href="http://www.borland.hu">kattantam</a>, és látom,
              hogy december 4.-én lesz egy jó kis Java <a href="http://www.borland.hu/news/events/12_04_02_javatech_budapest.html">
              szakmai napjuk</a> a Thermal Hotel Hélia-ban 4000 Ft +
              Áfá-ért, ami a kaja árát is tartalmazza. Lesznek ott a
              Borland-tól, IQSoft-tól, a Sun-tól és a Hostware-től. Itt
              szintén a fenti termékeket fogják dicsőíteni. Esküszöm, hogy
              nem fizettek nekem ezért...</p>
					<p>
               Nem lehet kikerülni, nézzük az újdonságait: projekt
              csoportok, Cactus, JSR 45 támogatás, Struts keretrendszer,
              és egy csomó más fejlesztés. Ez a Struts is mindig szembe
              jön velem mostanában, de arról majd később...
             </p>
					<em>
              Viczi, 2002. november 27.
             </em>
				</div>
				<div class="centerbox">
					<a name="20021128"/>
					<p>
						<img src="http://www.ibm.com/software/info/websphere/images/tridiagram.icons23.gif" alt="Websphere" width="225" height="223" class="leftimgbrd"/> Ma volt az IBM-nél egy Szoftver Partner Klub
              nevezetű rendezvény, ahol dr. Sugár Péter beszélt az <a href="http://www.ibm.com/software/integration/cw/">IBM
              Crossworlds</a> szoftverről. Az <a href="http://www.ibm.com/developerworks/websphere/zones/businessintegration/">
              üzleti integrációnak</a> három szintje van, a legalsó az
              adat szintű integráció, fájlokon, adatbázisokon keresztül,
              ahol a tranzakciós biztonság nehezebben kivitelezhető. A
              felette lévő szint az alkalmazás integráció (Enterprise
              Application Integration - EAI), és a legfelső a folyamat
              szintű integráció. No, ez a Crossworlds pont ebben segít
              nekünk. Miért is kell ez, hiszen ott van az Workflow, ami
              pont erre jó. Két irányzat van, az egyik, amikor a
              felhasználó is beleavatkozhat a munkafolyamatba, tőle indul,
              vagy nála végződik; illetve a teljesen automatizált
              folyamatok (Business Process Management - BPM). A Workflow
              az előbbihez jó, a Crossworlds az utóbbihoz.</p>
					<p>
               A Crossworlds alapban objektumokat kezel (General Business
              Objects), mely egy absztrakt fogalom, és mapping-gel képzi
              le ezt konkrét alkalmazások objektumaivá. Ezen objektumokra
              épülnek a konkrét folyamatok, melyeket a Crossworlds
              collaboration-oknak hív, melyek valójában üzleti folyamat
              sablonok (business process templates). Fizikailag ez úgy néz
              ki, hogy középen ül egy IBM CrossWorlds Interchange szerver,
              az connector-okkal kapcsolódik a konkrét alkalmazásokhoz.
              Rengeteg előre gyártott connector van, mely használhatja az
              adott alkalmazás API-ját, rosszabb esetben a tábláit,
              fájljait, végső esetben akár e-mail-en is tarthatja vele a
              kapcsolatot.</p>
					<p>
               Mi köze ennek a Java-hoz? Hát mert az egész Crossworlds
              Interchange Server Java alapú kiszolgáló. Most standalone,
              később Websphere Application Server-en fog futni. Az
              objektumok az alkalmazások és a Crossworlds között XML
              formátumban utaznak, JMS API-n át. A fejlesztés alapjában
              véve grafikus felületen történik, de a kódot Java nyelven
              írhatjuk.</p>
					<p>
               Ez kicsit tömény lett, de rövidebben nem tudtam idenyomni.
             </p>
					<em>
              Viczi, 2002. november 28.
             </em>
				</div>
				<div class="centerbox">
					<a name="20021129"/>
					<p>
              Mostanában egyre többször szó esik a vezető
              objektumorientált irányzatra épülő, vagy azzal teljesen
              ellentmondó irányzatokról. Nemrég fedeztem fel az
              aspektusorientált programozási módszertant (Aspect Oriented
              Programming - AOP), melyet egy 1997-es <a href="http://citeseer.nj.nec.com/kiczales97aspectoriented.html">cikk</a>
              indított el.</p>
					<p>
               Természetesen már van több Java nyelvű <a href="http://directory.google.com/Top/Computers/Programming/Languages/Java/Extensions/Aspect-Oriented/">
              megvalósítás</a> is, ezek közül én az <a href="http://www.eclipse.org/aspectj/">AspectJ</a> eszközt
              nézegettem.</p>
					<p>
               Az aspektusorientált programozás egy magasabb szintű
              absztrakció, mely megpróbálja az olyan általános célú
              kódrészelteket egységbe foglalni, melyek nehezen szedhetők
              külön egy osztályba, hiszen egy tipikus objektumorientált
              alkalmazásnál az osztályokban általában elszórva
              helyezkednek el (cross-cut). Ezáltal a kód rövidebb,
              tisztább, modulárisabb, érthetőbb, biztonságosabb és
              könnyebben módosítható lesz. Használható képfeldolgozási
              filterek, algoritmusok ciklusainak összevonására,
              forgalomirányításra, naplózásra, hiba utáni
              visszaállításra.</p>
					<p>
               Az AspectJ egy olyan eszköz, mely a Java nyelvet kibővíti
              aspektusorientált funkciókkal. Nem a forrást piszkálja,
              hanem a már kész bájtkódot.</p>
					<p>
               Mint ebből a <a href="http://developers.sun.com/tools/javatools/articles/aspectJ.html ">cikkből</a>
              is kiderül, alapfogalmai a join point, mely egy Java program
              egy végrehajtási pontja, mely lehet az a pont, ahonnan egy
              metódust hívnak, egy metódus végrehajtásának eleje és egy
              nem privát tag értékadása. A Point-Cut a Join Points-ok
              halmaza, bizonyos feltétellel feltételekkel definiálva. A
              Join Point nem állhat magában. Az Advice Declaration egy
              típust és egy kódrészt tartalmaz. Amikor a vezérlés egy Join
              Point-ra kerül, és a PointCut-ban megadott feltétel igaz,
              akkor lefut a típusnak megfelelően a az Advice Declaration
              kódja. Az Inter-Type Member Declaration-nal az osztályhoz
              kívülről tagokat adhatunk a forrás változtatása nélkül. Az
              aspektusok az osztályokkal megegyező szinten vannak, és
              Pointcut-okat, Advice Declaration-öket és Inter-Type Member
              Declaration-öket tartalmazhatnak.</p>
					<p>
               Hogyan használható ez pl. loggolásnál? Megadjuk, hogy a
              Join Point egy metódus hívása legyen, és a feltételt
              beállítjuk wildcard karakterekkel, hogy a *.setNev(..)
              metódusoknál legyen igaz. Megadjuk a típust, hogy before(),
              azaz a végrehajtás előtt fusson le a loggolást végző kód, és
              implementáljuk a loggolást. Majd megadjuk, hogy mely
              osztályokra vonatkozzon ez az aspektus. Így szépen
              elválasztottuk, a loggolást az osztályoktól, és saját
              komponensben (aspektusban) implementáltuk.</p>
					<p>
               Mostanában egyre hosszabbakat írok, megpróbálok
              visszavenni.
             </p>
					<em>
              Viczi, 2002. november 29.
             </em>
				</div>
				<div class="centerbox">
					<a name="20021130"/>
					<p>
              Érdekes, nemrég írtam, hogy legyen már kereső a Java
              levelező listához, erre lett is. Paller Gábor írta, J2EE
              technológiával készült, JBoss alkalmazásszerveren, MySQL
              adatbázis-kezelőn fut, a buildhez Ant kell, a teszteléshez
              JUnit. Jakarta rulez.</p>
					<p>
             </p>
					<em>
              Viczi, 2002. november 30.
             </em>
				</div>
				<div class="centerbox">
					<a name="20021201"/>
					<p>
              Mostanában kedvenceim a szervletek, és emlékszem, mikor
              kezdtem velük ismerkedni, csak úgy ontottam a
              <code>out.println("&lt;html&gt;blabla&lt;/html&gt;");</code>
              sorokat. Azt hiszem más sem volt ezzel másképp. Aztán
              megírtam a saját kis sablonmotoromat, ez is sokaknak ismerős
              lehet. Utána ismertem csak meg haladóbb technikákat, melyek
              különválasztották a megjelenési réteget az üzleti logikától,
              elválasztották a kódot a HTML tag-ektől. Ilyenek pl. a <a href="http://teatrove.sourceforge.net/">Tea Framework</a>, a
              <a href="http://www.webmacro.org/">WebMacro</a>, az <a href="http://jakarta.apache.org/ecs/">Elements Construction
              Set</a>, és az <a href="http://xmlc.objectweb.org/">XMLC</a>.
              A Sun válasza erre a problémára a <a href="http://java.sun.com/products/jsp/">JSP</a> (JavaServer
              Pages), mely lehetővé teszi a programozónak, hogy elválassza
              a megjelenítési és üzleti réteget, de nem kényszeríti rá. Ha
              a JSP-ben gyakran alkalmazunk Java kódot, és itt valósítunk
              meg különböző funkciókat, akkor Model 1 technikáról
              beszélünk, ha szervletek biztosítják ezeket a funkciókat a
              JSP mögött, akkor Model 2 technikáról. Ezekről bővebben ír
              az O'Reilly Servlet könyv is.</p>
					<p>
               A következő lépés volt a Swing-ből is ismert
              Model-View-Controller szemlélet megvalósítása a szervletek
              terén is, így kialakultak nagyon komplex framework-ök,
              melyek teljes környezetet nyújtanak szervletek
              fejlesztéséhez. Többjük több alprojektből is áll. Ilyen
              például a <a href="http://jakarta.apache.org/turbine/index.html">Turbine</a>,
              vagy a már említett <a href="http://jakarta.apache.org/struts/index.html">Struts</a>.</p>
					<p>

               Jelenlegi kedvencem a <a href="http://jakarta.apache.org/velocity/index.html">Velocity</a>,
              mely egy nagyon jó sablon motor, ami szervletekben és
              standalone alkalmazásokban is nagyon jól használható.
              Állítólag WebMacro klón. Saját nyelve van, többet is
              olvashatsz róla a cikkemben, melyet a főlapomról elérsz.</p>
					<p>
               Itt beszélek még a PULL és PUSH technikáról is, ami ebben a
              fogalomkörben elterjedt. Az előbbi azt jelenti, hogy a
              sablon szedi ki az információt az üzleti rétegből, az utóbbi
              azt, hogy a megjelenő adatokat úgy kell hozzárendelni a
              sablonhoz.</p>
					<p>
               Most olvastam egy jót: <i>"Of course, there is nothing new
              under the Sun..."</i>, hehe, <a href="http://www.sun.com/index.xml">Sun</a>, érted?
             </p>
					<em>
              Viczi, 2002. december 1.
             </em>
				</div>
				<div class="centerbox">
					<a name="20021213"/>
					
						<blockquote><p>"I like Coffee, I like Tea, I like Java and Java likes
              me."</p></blockquote>
					
					<em>
              Viczi, 2002. december 13.
             </em>
				</div>
				<div class="centerbox">
					<a name="20021202"/>
					<p>
              Csalódtam kedvenc decompiler-emben, méghozzá a <a href="http://kpdus.tripod.com/jad.html">JAD</a>-ban. Gyors,
              egyetlen EXE, és nagyon könnyen használható. Megpróbáltam
              neki megadni a következő kódrészletet, de teljesen kiakadt rá,
              érdekes kódot alkotott.
             </p>
					<pre>
                    public class Test {

                      public void test(Object param) {
                        if (param.getClass() == Test.class) {
                            
                        }
                      }

                    }</pre>
					<p>
              Valószínűleg a <code>Test.class</code> zavarta meg, ahhoz
              próbált érdekes dolgokat kreálni. Mind a v1.5.7d, mind a Jad
              v1.5.8e2 begőzőlt, az utóbbi nem annyira.</p>
					<p>
               Sürgős lévén kerestem is egy másikat, egy <a href="http://jode.sourceforge.net/">JODE</a> nevűt találtam, ami
              szabad forráskódú, Java nyelven írt, és egy optimalizert is
              tartalmaz, plusz grafikus interfészt. Minden gond nélkül
              visszafordította. Egy világ omlott össze bennem.
             </p>
					<em>
              Viczi, 2002. december 2.
             </em>
				</div>
				<div class="centerbox">
					<a name="20021203"/>
					<p>
              Annyira közhely számba megy, hogy most már muszáj itt is
              szerepeltetnem, hogy mennyire nem jó, ha <code>String</code>
              objektumokat + művelettel konkatenálunk, ahelyett, hogy a
              <code>StringBuffer</code> osztályt alkalmaznánk.</p>
					<p>
               Nézzük a következő kódot, ahol az egyik metódus az egyik, a
              másik a másikat használja.
             </p>
					<pre>
                    public class Test {

                      public void good() {
                        StringBuffer sb = new StringBuffer();
                        for (int i = 0; i &lt; 10; i++) {
                            sb.append("a");
                        }
                        System.out.println(sb);
                      }

                      public void bad() {
                        String s = new String();
                        for (int i = 0; i &lt; 10; i++) {
                            s += "a";
                        }
                      }

                    }</pre>
					<p>
              Ha lefordítjuk, és utána ráengedjük a javap utilt (javap -c
              Test), akkor láthatjuk, a disassemblált kódot.</p>
					<p>
               A rossz megoldásnál a ciklus törzsében mindig létrehoz egy
              <code>StringBuffer</code>-t, és a két szöveget
              hozzákapcsolja, majd meghívja a <code>toString</code>
              metódust. Mint tudjuk, a példányosítás elég
              erőforrás-igényes művelet, így sokat takarítunk meg, ha csak
              egyszer fut le.
             </p>
					<em>
              Viczi, 2002. december 3.
             </em>
				</div>
				<div class="centerbox">
					<a name="20021214"/>
					<p>
              Valószínűleg sokaknak ismerős a Bruce Eckel név, esetleg a
              <a href="http://www.mindview.net">Mindview</a>, de ha így
              sem, akkor a Thinking in Java ingyen hozzáférhető könyv.
              Nekünk anno egyetemen szinte kötelező olvasmány volt, nagyon
              részletes leírása a Java szinte összes területének. Most
              megjelent a <a href="http://64.78.49.204/TIJ3.zip">4.
              átdolgozás</a>. Java fejlesztőknek érdemes még megnézniük a
              fejlesztés alatt lévő Thinking in Patterns with Java könyvet
              is, mely a nagyszerű tervezési mintákról, és azok Java
              nyelvű megvalósításairól szól, letöltés <a href="http://www.mindview.net/Books/TIPatterns/">itt</a>. Ezen kívül
              készül egy Thinking in Enterprise Java című könyv is, amely
              azonban nem érhető még el, de a szerző az év végére ígéri.
             </p>
					<em>
              Viczi, 2002. december 14.
             </em>
				</div>
				<div class="centerbox">
					<a name="20021215"/>
					<p>
              Izgalmasan alakulnak az erőviszonyok a nagy szoftvergyártók
              terén. Nem olyan régi hír, hogy az IBM 2,1 milliárd
              dollárért <a href="http://www.ibm.com/news/us/2002/12/061.html">felvásárolta</a>
              a Rational Software-t, erősítve a szoftver vonalat, és
              felvette ötödik üzletágként. Mint tudjuk, az első négy a
              Websphere, Lotus, DB2 és Tivoli. Kíváncsi vagyok mi lesz a
              színe a lila, sárga, zöld és piros után. Piros nem lehet,
              mert az a Tivoli-é.</p>
					<p>
               Ahogy már Szabolcs is írta eddigi egyetlen megjegyzésében,
              októberben <a href="http://www.terminal.hu/newsread.php?id=26203311024516">vette
              meg</a> a Borland a <a href="http://www.borland.com/together/index.html">TogetherSoft</a>-ot, melynek
              egy kitűnő eszköze a ControlCenter, mely a feladat
              analizálását és a szoftver tervezését segíti. Használhatóak
              benne az UML nyelv elemei, de saját diagramjai is vannak,
              ezekből kódot tud generálni, de segíti a kész kódból diagram
              készítését is (reverse engineering).</p>
					<p>
               Jönnek a mindent egybe integrált, all-in-one IDE-k,
              melyekhez győzzük venni a vasat. Érdekes emellett, hogy a
              Borland a Studio-jához a Rose-t adja, míg a ControlCenternek
              van WebSphere Edition-je.</p>
					<p>
               Erre egy olyan híresztelés (a link megszűnt)
              is napvilágot láttott, hogy reális annak az esélye, hogy a
              Microsoft felvásárolja a Borlandot. Ezzel biztosan jól be is
              tenne a Java vonalnak, mivelhogy a Microsoft nagyon nem
              csípi.</p>
					<p>
               De ez már politika, maradjunk a szakmánknál...
             </p>
					<em>
              Viczi, 2002. december 15.
             </em>
				</div>
				<div class="centerbox">
					<a name="20021216"/>
					<p>
              A Sun-nál megjelent egy cikk a Java generikusokról, más
              néven paraméterezett típusokról, mely a Java 1.5 része lesz,
              melyet már mindenki türelmetlenül vár. A <a href="http://java.sun.com/developer/technicalArticles/releases/generics/">
              cikk</a> röviden prezentálja, hogy mire is jó ez az eszköz
              például listák esetében, ahol jelenleg nem lehet megadni,
              hogy milyen típusok az elemei, így azokat keverni lehet,
              gyönyörű, futásidejű <code>ClassCastException</code>-öket
              generálva ezzel.</p>
					<p>
               A generikusok segítenek, hogy ezeket a hibákat már
              fordítási időben kiszűrjük, és a kód is átláthatóbb,
              tisztább lesz. Nem csak a beépített generikusokat
              használhatjuk, hanem saját generikus interfészeket,
              osztályokat, és metódusokat is írhatunk. Bővebb információt
              a Java Specification Request (JSR) <a href="http://jcp.org/en/jsr/detail?id=14">14. bejegyzésében</a>
              találhatunk.</p>
					<p>
               Ennek kipróbálásához nem muszáj várni az 1.5-ös JDK-ra,
              hanem ki lehet próbálni a Java fordító <a href="http://developer.java.sun.com/servlet/SessionServlet?url=/developer/earlyAccess/adding_generics/index.html">
              prototípus megvalósításával</a> is.
             </p>
					<em>
              Viczi, 2002. december 16.
             </em>
				</div>
				<div class="centerbox">
					<a name="20021218"/>
					<p>
              Most kaptam a meghívót A Sun-tól a 3. Sun Fejlesztői
              Konferenciára, mely 2003. január 28-án lesz a Budapesti
              Kongresszusi Központban. A rendezvény egész napos, ingyenes,
              szó esik a nemrég megjelent Sun ONE Application Server
              7-ről, web szolgáltatásokról, Java 1.4-es platformról és a
              vezeték nélküli technológiákról. Érdemes rá <a href="http://hu.sun.com/esemeny/fejlesztonap/">jelentkezni</a>, a
              tavalyi is elég jól sikerült, a kaja is jó volt.
             </p>
					<em>
              Viczi, 2002. december 18.
             </em>
				</div>
				<div class="centerbox">
					<a name="20021219"/>
					<p>
              A University of Illinois és az OpenEAI Software Foundation
              bejelentette, hogy megalapítja az OpenEAI Project
              megalapítását, mely egy Enterprise Application Integration
              (EAI) kezdeményezés nyílt forráskódú integrációs
              technológiák kifejlesztésére és tökéletesítésére.</p>
					<p>
               A történeti háttér annyi, hogy próbáltak egy bazi nagy
              rendszert csinalni (Enterprise resource Planning - ERP), ami
              átvenné 1500 egyetemi rendszer feladatát, illetve a
              bonyolultabbakhoz interfészt biztosítana. Jelentős kutatást
              végeztek a piacon, és helyesen arra következtetésre
              jutottak, hogy nyílt, szabvány technológiákra kell építeni,
              mint az XML, Java és Java Message Service (JMS). Ezeken
              alapulva ki is fejlesztettek egy integrációs metodológiát,
              melyet megosztottak más érdeklődőkkel is.</p>
					<p>
               Most mindezen eredményeket nyílttá szeretnék tenni, az
              Apache Project-hez hasonlóan, LGPL, GPL és GFDL licenszek
              keretein belül.</p>
					<p>
               A project jellemzői a közös kutatás és fejlesztés, az EAI
              alapjainak megértése és dokumentálása, jó minőségű
              szoftverek kifejlesztése, és ezek nyílt közzé tétele.
              Közzéteszik a teljes metodológiát, dokumentációkat,
              formátumokat, API-kat, referencia implementációkat.</p>
					<p>
               Már alig várom, hogy januárban megnyissák a jelenleg
              jelszóval védett <a href="http://www.openeai.org">honlapjukat</a>.
             </p>
					<em>
              Viczi, 2002. december 19.
             </em>
				</div>
				<div class="centerbox">
					<a name="20021220"/>
					<p>
              Q: Why do real Java programmers wear glasses?</p>
					<p>
               A: Because they don't C#.
             </p>
					<p>
              Kellemes Karácsonyt kívánok mindenkinek!
             </p>
					<em>
              Viczi, 2002. december 20.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030101"/>
					<p>
              Boldog Új Évet Kívánok mindenkinek. Remélem a JTechLog ebben
              az évben is meg fog maradni, és többen olvassátok, mint
              idén. Én rajta leszek. :)</p>
					<p>
               Kezdésként meg is szeretném köszönni Szeless Zoltánnak,
              hogy ezt a naplót kilinkelte a <a href="http://java.lap.hu">java.lap.hu</a> oldalra, így remélem
              többen eljuttok hozzám.</p>
					<p>
               Ezúton kérlek téged is, Kedves Látogató, ha egy linkkel is
              népszerűsíteni tudnád oldalamat, nagyon megköszönném. Holnap
              jelentkezem...
             </p>
					<em>
              Viczi, 2003. január 1.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030102"/>
					<p>
			  A J2ME
              kijövetelekor kissé szkeptikus voltam, felidéztem a Java
              appletek csúfos bukását, a Swing felület hiányosságait és
              lassúságát, de azért szurkoltam, hogy Java ne csak a szerver
              oldalon legyen reális lehetőség.</p>
					<p>
               Úgy látszik, egyre jobban kezd egyenesbe érni, egymás után
              jönnek ki a Java-t támogató telefonok, sőt 2002.
              novemberében a <a href="http://java.sun.com/products/midp/">MIDP</a> (Mobile
              Information Device Profile) 2.0-ás végleges specifikációja
              is, illetve a hozzá tartozó referencia implementáció. Egy jó
              <a href="http://www.sg.hu/cikk.php?cid=25677">cikk</a>
              olvasható erről a Supergamez-en.</p>
					<p>
               A MIDP a Connected Limited Device Configuration-nal (CLDC)
              kombinálva egy Java környezet mobiltelefonok és belépő
              szintű PDA-k számára. A MIDP természetesen támogatja az
              alapvető nyelvi elemeket, GUI építést, hálózatkezelést,
              helyi adattárolást, sőt szemétgyűjtést is támogat,
              természetesen némi megkötésekkel. Tartalmaz egy szabványos
              Java futtatókörnyezetet és Java APIk egy halmazát.</p>
					<p>
               Fő újdonságok az 1.0-hoz képest a fejlesztett felhasználói
              felület, az új médiatípusok támogatása, Game API játékok
              fejlesztéséhez (pl. sprite-ok), HTTPS csatlakozási
              lehetőség, figyelemre méltó a push architektúra (szerver
              kezdeményez, nem a mobil eszköz), a Over-the-air (OTA)
              Provisioning, mely meghatározza, hogyan lehet az alkalmazást
              letölteni, installálni, frissíteni és eltávolítani az
              eszközről, valamint egy robosztus biztonsági modell.
             </p>
					<em>
              Viczi, 2002. január 2.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030103"/>
					<p>
              Még novemberben elkészült a J2EE 1.4 Platform
              specifikációja, és decemberben jelent meg a <a href="http://java.sun.com/developer/technicalArticles/releases/j2ee1.4beta/">
              J2EE 1.4 Beta Software Developer Kit</a>. Mint az köztudott
              (hehe, Schafranek), a J2EE (Enterprise Edition)
              specifikációk és fejlesztési gyakorlatok együttese
              többrétegű, szerver központú alkalmazások fejlesztésére,
              telepítésére és karbantartására. A J2SE platformot egészíti
              ki olyan API-kal, mely lehetővé teszi vállalati szintű,
              biztonságos, stabil, skálázható, gyors alkalmazások
              fejlesztését.</p>
					<p>
               Az új verzió fő újdonsága a Web szolgáltatásokhoz tartozó
              API-k, ezen kívűl új Management és Deployment API-kat vezet
              be, a JavaServer Pages és Enterprise JavaBeans és Connector
              API-k új verzióját tartalmazza, így egy nagyszerű platform
              Web szolgáltatások fejlesztéséhez és alkalmazás
              integrációhoz.</p>
					<p>
               Új <a href="http://java.sun.com/developer/Quizzes/JSC/">kvíz</a>
              van kinn a Sun-nál, érdemes lecsekkolni.</p>
					<p>
               Biztos olvastátok már a jóhírt, hogy a Sun kontra MS perben
              a szövetségi bíró egy előzetes rendeletben arra kötelezte a
              Microsoft-ot, hogy azt a Sun Java futtatókörnyezetének
              mindenkori legaktuálisabb változatával szállítsa. A Sun
              azzal érvet, hogy a Windowsban egy régebbi környezet van,
              így próbálja lenyomni Java-t, mivel a saját platformját, a
              .NET-et nyomja. Mellesleg a J2EE-t numero uno enemynek
              kiáltotta ki. Szerintem a .NET kontra J2EE mizériát kezdik
              kicsit túllihegni, hiszen elfér egymás mellet mind a kettő,
              mint ahogy eddig is.
             </p>
					<em>
              Viczi, 2003. január 3.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030104"/>
					<p>
              Az <a href="http://www.eclipse.org/aspectj/">AspectJ</a>,
              amiről már régebben is írtam. szépen <a href="http://dev.eclipse.org/viewcvs/indextech.cgi/~checkout~/aspectj-home/moving-letter.html">
              átköltözött</a> az <a href="http://www.eclipse.org">Eclipse.Org</a>-ra. Az Eclipse egy
              nyílt forrású project, melynek célja egy könnyen bővíthető,
              all-in-one fejlesztési platform megteremtése erősen
              integrált eszközökkel. Többek között pl. erre épül az IBM
              által nagyon nyomott WebSphere Studio is. Nagyon nyomulnak
              ezek az open cuccok, érdemes őket kipróbálni, hátha
              megtetszik. Ajánlom még a Java nyelven fejlesztett <a href="http://www.netbeans.org/">NetBeans</a> platformot és
              fejlesztői környezetet is.
             </p>
					<em>
              Viczi, 2003. január 4.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030105"/>
					<p>
              Nemrég láttam a <a href="http://www.ibm.com/software/integration/wmq/">WebSphere
              MQ</a> 5.3.1-et valahol, és nem is hittem a szememnek,
              hiszen naponta csekkolom az IBM-et, és semmi. Azóta sem.
              Viszont érdekes körülmény, hogy a letöltéseknél már csak
              5.3.0.1-es van, amihez odaírták, hogy azelőtt 5.3.1
              volt.</p>
					<p>
               Letöltöttem, tényleg tök más, mint az 5.3-as, viszont az
              összes fájl 5.3-ként emlegeti, a weben sehol nem találtam
              semmit, hogy kijött volna új. Furcsa, hogy az 5.3-as nem
              támogatta az XP-t, ez meg simán elkezd csúszni fel.</p>
					<p>
               Miért nem ír erről az IBM? Mi az újdonság az újban? Miért
              tették bele azt a nullát? Örök titok marad.</p>
					<p>
               Aki nem hallott már róla, az IBM WebSphere MQ egy
              üzenet-sorakoztató middleware, mely ipari körökben nagyon
              elterjedt alkalmazásintegráció körében. Támogatja
              természetesen a JMS-t is, de a saját API-jához (MQI) is
              tartalmaz Java osztályokat. Az 5.3 előtti verziókban külön
              SupportPack volt a Java támogatás, de az újban már
              belerakták teljesen.</p>
					<p>
               Senkit ne zavarjon meg, hogy más JMS-t támogató
              middleware-ek mennyivel sokkal gyorsabbak, érdemes megnézni
              a funkcionalitásukat is. Jóhogy gyorsabb, ha nem annyira
              biztonságos...
             </p>
					<em>
              Viczi, 2003. január 5.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030106"/>
					<p>
              Mostanában kénytelen vagyok Cobol-lal foglalkozni, és
              érdekességképpen megnéztem, hogy hogyan lehet összekapcsolni
              Java programokkal. A válasz meglepő volt, hiszen a Cobol
              mégsem olyan old-school nyelv, mint ahogy képzeltem, a
              Java-val való együttműködés könnyen megoldható.</p>
					<p>
               Nem kell a Java Native Interface (JNI) rejtelmebe
              elmerülnünk ahhoz, hogy egy szép kevert alkalmazást írjunk.
              És spec. a <a href="http://www.microfocus.com/products/netexpress/">
              Micro Focus Net Express 3.1</a>-et néztem, ahol közvetlenül
              hívhatunk Java-ból Cobol-t, és fordítva, a Cobol
              adatstruktórák is nagyon egyszerűen átvihetők. Vicces, hogy
              létezik egy Net Express Enterprise JavaBean (EJB) wrapping,
              mely becsomagolja a Cobol programot egy JavaBean-be úgy,
              hogy standard alkalmazásszerveren fusson. A Cobol Portal-on
              erről is egy elég jó <a href="http://www.cobolportal.com/files/Downloads/javacobol1.pdf">cikk</a>
              van, Cobol funoknak és nosztalgiázóknak kötelező.</p>
					<p>
               Meglepődtem, hogy a Cobol, hogy lépést tart a korral, lehet
              Web-es alkalmazásokat írni vele, van objektumorientált
              verziója, van hozzá web és alkalmazás szerver, lehet web
              szolgáltatásokat írni és hívni, együtt tud működni Java és
              .NET platformmal.</p>
					<p>
               Ebben a Prog.Hu <a href="http://www.prog.hu/news.php?qnid=1037">cikkben</a>
              olvashattok arról, hogy mostanában milyen elvárások vannak a
              programozókkal szemben az álláshirdetésekben. Meglepő
              eredmények is vannak benne, de látható, hogy az aránylag
              fiatal Java és az aránylag öreg Cobol is elég jól tartja
              magát.
             </p>
					<em>
              Viczi, 2003. január 6.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030107"/>
					<p>
					<img src="http://java.inf.elte.hu/java-1.3/Java-1.jpg" alt="Java Biblia" width="220" height="314" class="rightimgbrd"/> 
					Nos, megvan az első hozzászóló a
              vendégkönyvben (időközben megszüntetve), nagyon köszönöm a bíztatást, én is csak
              bíztatni tudlak, hogy haladj tovább a Java rögös útjain,
              mert megéri. A többieket is arra szeretném bíztatni, hogyha
              van Java-val kapcsolatos kérdésük, ötletük, írják meg a
              vendégkönyvbe. Ezen kívül várok minden Java-val kapcsolatos
              anyagot, szívesen kilinkelem, kiteszem ide, írok is róla pár
              szót. Remélem sikerül valami komplexebb site-ot összehozni,
              de ehhez kéne a Ti segítségetek is.</p>
					<p>
               Kaptam is egy kérdést, amire megpróbálok választ adni. A
              kérdés a következőképpen szól, aki nem olvasná a
              vendégkönyvet. (Hiba...)</p>
					<p>
             </p>
					<p>
						<i>en most eppen azzal szorakozom hogy egyik threadbol egy
              masik threadben levo JLabel settext() metodusaval
              valtoztassam annak erteket .... eddig nem sok sikerrel ...
              5let???</i>
					</p>
					<p>
              Nos ezzel én is szívtam anno rendesen, a pontos választ a 
              <!-- http://java.inf.elte.hu/ -->
              Java 2 Útikalauz
              programozóknak kedvenc könyvem második kötetének A.2.2.
              fejezete adja. Csak annyit írnák ide, hogy az MVC
              architektúra miatt szinkronizálni kell a komponens modelljét
              és a megjelenítését. Azért, hogy a Swing gyors legyen, ezt
              fullon kihagyták (nem mintha így villám lenne), és
              biztosítani kell, hogy a módosításokat csak az AWT
              végrehajtószál futtathassa. Ha egy eseménykezelőből állítasz
              valamit, akkor az nem gáz, mert alapban ezen a szálon
              keresztül megy, de ha saját szálat indítasz, és onnan
              közvetlenül hívsz beállító metódusokat, akkor gebasz lehet.
              Ezért kell alkalmazni a <a href="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/SwingUtilities.html">
              SwingUtilities</a> osztály invokeLater metódusát, aminek egy
              Runnable objektumot kell átadni, és ennek a run() metódusát
              futtatja az AWT szál, amint ideje van rá.</p>
					<p>
               Remélem segítettem, a kulcsosztályra mindenesetre érdemes
              rákeresni. Ha lehet, majd a nicket és e-mail-t is írjátok be
              a textarea-ba, hogy tudjam, ki írta...
             </p>
					<em>
              Viczi, 2003. január 7.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030108"/>
					<p>
              Most vettem észre, hogy a Velocity honlapján kitettek egy <a href="http://www.rollerweblogger.org/index.html">linket</a>
              a Roller oldalára, mely egy weblogging webes rendszer,
              melyet alapvetően egy cikk példájának írtak, mely
              megmutatja, hogy lehet a Struts Servlet keretrendszert, a
              Castor JDO perzisztens réteget, az XDoclet kódgenerátort és
              a Velocity sablonmotort (ragaszkodom a magyar kifejezésekhez
              :). Az oldal nagyon tanulságos, természetesen egy link is
              van az eredeti <a href="http://www.onjava.com/pub/a/onjava/2002/04/17/wblogosj2ee.html">
              cikkre</a>.</p>
					<p>
               Innen kezdtem el nézelődni, és megtaláltam a nagyszerű <a href="http://www.javablogs.com/Welcome.jspa">java.blogs</a>
              oldalt, ami egy közösséget szervez Java bloggereknek, a
              lényeg, hogy a blog RSS formátumban is elérhető legyen.
              Ekkor mutatja a frissítéseket, rengeteg Java-val foglalkozó
              naplót, stb. Írtam nekik, szívesen varják, hogy magyarok is
              csatlakozzanak. Én is megtenném, de most már áttérnék előbb
              a statikus html-ről valami modernebbre, viszont ahhoz egy
              állandóan online szerver kéne. Sajna én nem rendelkezem
              ilyennek, a külföldi ingyenesek meg iszonyú lassúak. Tehát
              aki esetleg tudna... :)</p>
					<p>
               Ha már tegnap szó esett A Java könyvről, hadd szóljak már
              arról is, hogy megjelent a 
              <!-- http://java.inf.elte.hu/j2ee/index.html -->
              J2EE változat is, ami gyönyörű, mindenkinek csak ajánlani tudom. Szó esik
              benne olyan finomságokról, mint szervletek, JSP, RMI, JNDI,
              Corba, JMS, Enterprise JavaBeans, JDBC, JTA, XML, JavaMail
              és JMF. Nem épül az előző könyvre, de szerintem senkinek a
              polcáról sem hiányozhat.
             </p>
					<em>
              Viczi, 2003. január 8.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030112"/>
					<p>
              Gyűröm a JBuilder-t rendesen, egyelőre az 5-ös verziót, mert
              a 8-as verzió a Personal Edition-ben sajnos csak a saját
              JDK-ját használja, illetve nem akarta a csomagokat fa
              hierarchiában ábrázolni, csak egybe nyomta az összes fájlt.
              Az 5-ös, abban az esetben, ha odamásoltam egy fájlt az
              <code>src</code> könyvtárban, simán látta, viszont a 8-asnál
              külön hozzá kell adni a project-hez. Egy verzióváltás mindig
              bonyodalmakkal jár.</p>
					<p>
               Viszont észre is vettem néhány furcsa dolgot, amiből
              esetleg kiderül, hogy a Borlandos fiúk csak a C parsert
              dolgozták meg. Nézzük is következő kis kódot:
             </p>
					<p>
						<code>if (myInt != myObj) { }</code>
					</p>
					<p>
              Ahol a <code>myInt</code> egy <code>int</code> típusú
              változó, míg a <code>myObj</code> egy <code>Object</code>
              típusú változó. Erre a következő hibaüzenet jön:
             </p>
					<p>
						<code>"Blahblah.java": Error #: 300 : method !=(int,
              java.lang.Object) not found in class Blahblah at line 46,
              column 21</code>
					</p>
					<p>
              Operátortúlterhelés Java-ban? Nem lenne rossz... :)</p>
					<p>
               Másik árulkodó jel az <code>inner</code> szó kulcsszóként
              való kezelése, ami nem éppen helyénvaló a Java Language
              Specification 2.0 szerint.
             </p>
					<em>
              Viczi, 2003. január 12.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030114"/>
					<p>
              Éppen egy <a href="http://www.scitools.com/uj.html">Understand for Java</a>
              eszközzel szenvedek, ami egy reverese enginieering,
              dokumentációs, kódot elemző és mérő alkalmazás a Scientific
              Toolworks, Inc.-től. Többek szerint is a neve egy Java
              Tutorial doksira emlékeztet.</p>
					<p>
               Nagyon aranyos kis eszköz, un. egyedeket definiál és
              kapcsolatokat, amiket a forráskód analizálásával térképez
              fel, és tárolja el saját (sajnos nem külső) adatbázisába. Az
              egyedek a fájlok, interfászek, osztályok, konstruktorok,
              metódusok, paraméterek, változók, a kapcsolatok a hívási,
              öröklődési kapcsolatok. A kódot syntax highlight-tal
              mutatja, a referenciák között grafikusan mászkálhatunk egy
              gráfban (fában), és nagyszerű text és html riportokat
              készíthetünk. Aranyosak a mérőszámok, melyek bizonyos
              minőségi mutatók, általában hányadosok. Ilyen pl. a
              megjegyzések és a tényleges kódsorok aránya, de van belőle
              egy csomó. Kikereshetjük az olyan osztályokat, metódusokat,
              változókat, melyekre nincs referencia. A program bizonyos
              funkciói parancssorból is elérhetőek, és C, illetve Perl
              nyelvű API-val rendelkezik, így saját dokumentációs
              rendszerünkbe is könnyen beilleszthetjük.</p>
					<p>
               Az eszköz létezik C, C++, Fortran és Ada nyelvekre is.</p>
					<p>
              Aki hasonló toolt akar, de ingyeneset, annak érdemes
              megnéznie a GNU-s <a href="http://sourcenav.sourceforge.net/">Source Navigator</a>
              nevezetű alkalmazást, ami a Cygnus tulajdonában van, amit a
              Red Hat be is olvsztott, jól. A termék egy csomó nyelvet
              ismer, sajna annyira nem felhasználó barát, mint az
              előző.</p>
					<p>
               Egy másik kereskedelmi termék a <a href="http://www.castsoftware.com/Products/AMS/Index.html">
              CAST Application Mining Suite</a>, ami egyrészt bazi drága,
              másrészt a supportjuk nem hajlandó nekem trial kulcsot
              küldeni, amiért ki sem tudom próbálni. Annyi biztos, hogy
              több adatbázis-kezelővel is együtt működik, egy rakat táblát
              generál, majd kéri a kulcsot... Nem szeretem a "kérek a
              supporttól kulcsot, és ha ráér ad" taktikát.
             </p>
					<em>
              Viczi, 2003. január 14.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030119"/>
					<p>
              Imádom a verziószámokat, mindig lesem az új megjelenéseket,
              és kitaláltam, hogy csinálok egy kis játékot is ezzel
              kapcsolatban. Párosítsátok össze, hogy melyik szoftver
              melyik verziószámnál tart. (Legstabilabb verzió.)
              Megpróbáltam ismert, vagy ezen az oldalon már emlegetett
              programokat összeválogatni.
             </p>
					<p>
             </p>
					<table width="50%">
						<tr>
							<td>
                 J2EE
                </td>
							<td>
                 1.0.4
                </td>
						</tr>
						<tr>
							<td>
                 J2SE
                </td>
							<td>
                 2.0.2
                </td>
						</tr>
						<tr>
							<td>
                 J2ME Wireless Toolkit
                </td>
							<td>
                 1.02
                </td>
						</tr>
						<tr>
							<td>
                 Borland JBuilder
                </td>
							<td>
                 1.3.1
                </td>
						</tr>
						<tr>
							<td>
                 IBM WebSphere Studio
                </td>
							<td>
                 1.2.7
                </td>
						</tr>
						<tr>
							<td>
                 IBM VisualAge for Java
                </td>
							<td>
                 8
                </td>
						</tr>
						<tr>
							<td>
                 NetBeans
                </td>
							<td>
                 1.5.1
                </td>
						</tr>
						<tr>
							<td>
                 Eclipse
                </td>
							<td>
                 1.4.1
                </td>
						</tr>
						<tr>
							<td>
                 Ant
                </td>
							<td>
                 3.4
                </td>
						</tr>
						<tr>
							<td>
                 Tomcat
                </td>
							<td>
                 5
                </td>
						</tr>
						<tr>
							<td>
                 Struts
                </td>
							<td>
                 4.1.18
                </td>
						</tr>
						<tr>
							<td>
                 Log4J
                </td>
							<td>
                 4
                </td>
						</tr>
					</table>
					<p>
              A megoldás elolvasásához jelöld ki egérrel a következő, nem
              látható mondatot a két tag között:
             </p>
					<p>
              &lt;megoldás&gt; <span class="hidden">J2EE 1.3.1, J2SE
              1.4.1, J2ME Wireless Toolkit 1.0.4, Borland JBuilder 8, IBM
              WebSphere Studio 5, IBM VisualAge for Java 4, NetBeans 3.4,
              Eclipse 2.0.2, Eclipse 2.0.2, Ant 1.5.1, Tomcat 4.1.18,
              Struts 1.02, Log4J 1.2.7.</span> &lt;/megoldás&gt;
             </p>
					<p>
              Tudom, a játék nagyon naphoz kötött, annyira gyorsan
              nyomatják ki az új cuccokat. Örüljünk ennek.
             </p>
					<em>
              Viczi, 2003. január 19.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030120"/>
					<p>
              Egy kis szünet után visszatértem, és olvasom is a <a href="http://www.sg.hu/cikk.php?cid=25994">hírt</a> a
              SuperGamez-en, hogy a Microsoft-nak az XP-re a Sun JVM-et
              bele kell raknia 120 napon belül. Igen, erről már írtam,
              hogy a lassan csőd szélén álló kedvenc cégünknek, a Sun-nak,
              jelentős esélyei vannak a per megnyerésére, de az érdekesség
              itt inkább a <a href="http://www.sg.hu/listazas.php3?id=1042743867">fórum</a>,
              ahol Lola (nem tudok róla többet), és Kertész Csaba, a
              csodás, Swinges <a href="http://jdictionary.sourceforge.net/">JDictionary</a>
              szótárprogram írója vitatkoznak a döntésről. Érdemes
              elolvasni. Persze én sem bírtam ki, hogy bele ne
              kotnyeleskedjek.</p>											
			  <div class="centerimg">
			    <a href="http://java.sun.com/products/jfc/tsc/sightings/S12/jdictionary/01.jpg">
				<img src="http://java.sun.com/products/jfc/tsc/sightings/S12/jdictionary/01.jpg" alt="JDictionary" width="650" height="463" />
				</a>
				</div>
				 <p>Itt található
              egy link is a <a href="http://java.sun.com/products/jfc/tsc/sightings/">Swing
              Sightings</a> oldalra, amely Swing kezelőfelülettel
              rendelkező Java alkalmazások GUI-ját mutatja be. Nagyon
              csicsás dolgok vannak itt, érdemes megcsekkolni.
              Természetesen a JDictionary is szerepel itt a 12. lapon.
              Hajrá magyarok!</p>
					<p>
               A Prog.Hu-n található három Java-s cikk is, mindhárom Sting
              tollából, az <a href="http://www.prog.hu/news.php?qnid=1089">egyik</a> arról
              szól, hogy a Sun egyszerűbbé és egységesebbé szeretné tenni
              a Java nyelvet, a <a href="http://www.prog.hu/news.php?qnid=1084">másik</a> az EE
              1.4-esről ír, míg a <a href="http://www.prog.hu/news.php?qnid=1069">harmadik</a> a Nokia
              Linuxos Java fejlesztőkészletéről.
             </p>
					<em>
              Viczi, 2003. január 20.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030121"/>
					<p>
              Nagyon szeretem a szép, elegáns Java kódot, amit például
              bizonyos könyvekben lehet találni (pl. az O'Reilly Java
              szervletek programozása című könyvben).</p>
					<p>
               Miért is van szükség szép Java kódra? Egyrészt egy
              komolyabb program élettartamának 80%-a fenntartás. Rég írt
              kódra már alig emlékszik az ember, arról már nem is
              beszélve, ha más kódját kell buherálnunk. Ha ugye a forrás
              kódot is adjuk (nem csak free szoftver esetén), akkor
              könnyen megítélhetik az egész programot a forráskódunk
              minőségéből. Szép kódot könnyebb megérteni, fejleszteni,
              debuggolni, átvenni.</p>
					<p>
               Persze vannak alapvető szabályok, melyeket érdemes
              megtartani, a Sun is kiadott ilyent <a href="http://java.sun.com/docs/codeconv/index.html">kódolási
              konvenciók</a> névvel. Más kérdés, hogy a Sun-os források
              sem mindig tartják be ezeket.</p>
					<p>
               Fő célként kell kitűzni, hogy a kódoláskor konzisztensek
              maradjunk, akár a formátumnál, akár a nevek adásakor. Persze
              mivel az emberek ízlése eltérő, viták is alakulhatnak ki, ki
              a tab-ot, ki a space-t kedveli, ugyanígy eltérők lehetnek a
              zárójelek és behúzások.</p>
					<p>
               Persze különböző cégek saját házi szabványokat alkottak,
              azokból is érdemes ötleteket meríteni sajátunk
              kialakításakor. A Developer.Com-on jelent meg egy <a href="http://www.developer.com/java/other/article.php/600581">cikk</a>,
              melynél a linkek között több jó helyre is el lehet
              jutni.</p>
					<p>
               Persze a programozók alapvetően lusták, így több eszköz is
              megjelent, mely a kódot formázza, illetve ellenőrzi. A
              konvenciók általában konfigurálhatók. Az én kedvencem a <a href="http://checkstyle.sourceforge.net">CheckStyle</a>, ami
              a forrást ellenőrzi, és ANT taszkként is használható. Egy
              property állománnyal konfigurálható, és a hibákat a
              képernyőre írja ki. Ezzel kitűnően ellenőrizhető az is, hogy
              mindennek van-e dokumentációs megjegyzése, így a JavaDoc-kal
              generált dokumentációban biztos nem lesznek fehér
              foltok.</p>
					<p>
               Másik aranyos tool, amely formázza a Java és C/C++ kódot
              is, illetve javítja a behúzásokat is, az <a href="http://astyle.sourceforge.net/">Artistic Style</a>, röviden
              astyle.</p>
					<p>
               Ezekhez az eszközökhöz van plugin az egyik kedvenc Java
              nyelven íródott szerkesztőmhöz, a <a href="http://www.jedit.org">JEdit</a>-hez (, ami jelenleg a
              4.1pre8-nál jár, január 10 óta). Persze a nagyobb IDE-k
              beépítve tartalmaznak ilyen szolgáltatásokat is.
             </p>
					<em>
              Viczi, 2003. január 21.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030122"/>
					<p>
              Tegnapi formázásról szóló beszólásom közben jöttem rá, hogy
              külön tudomány a megfelelő megjegyzések, illetve
              dokumentációs megjegyzések készítése, melyről szintén van
              egy <a href="http://java.sun.com/j2se/javadoc/writingdoccomments/index.html">
              cikk</a> a Sun-nál.</p>
					<p>
               A Java forrásban található dokumentációs megjegyzésekből a
              <a href="http://java.sun.com/j2se/javadoc/">JavaDoc</a> tool
              készít dokumentációt. A JavaDoc definiál egy un. Doclet
              API-t, melyet használva saját dokumentációs eszközöket
              készíthetünk. Persze rengeteg <a href="http://www.doclet.com/">docletet</a> találhatunk, melyek a
              dokumentációt különböző formátumban gyártják (HTML, XML,
              PDF, RTF, DocBook, TeX), illetve ellenőrzik, hogy nem-e
              hiányzik valahonnan a dokumentációs megjegyzés, így a
              generált dokumentációban nem lehet üres folt. Persze vannak
              eszközök speciális osztályok speciális dokumentálására is,
              pl. JavaBean-ek, illetve szervletek esetén.
             </p>
					<em>
              Viczi, 2003. január 22.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030123"/>
					<p>
              Biztos mindenkinek eszébe jutott, hogy ahogy a Java
              alkalmazásából az adatbázist közvetlenül JDBC-vel eléri, az
              nem egy elegáns megoldás. Egyrészt nem igazán passzol az
              objektumorientált szemléletbe, másrészt csúnya, ha az SQL és
              a Java nyelv keveredik egymással, harmadrészt igen nagyok a
              hibalehetőségek.</p>
					<p>
               Ezek elkerülésére több megoldás is van, egyrészt az
              objektumorientált adatbázis-kezelők, melyekkel a cégek
              általában nem rendelkeznek, és koránt sem olyan kiforrottak
              és robosztusak, mint a már jól bevált relációs
              adatbázis-kezelők, másrészt a perzisztens rétegek
              alkalmazása.</p>
					<p>
               Én használatra természetesen ismét egy Jakarta-s project-et
              választottam, ami az <a href="http://jakarta.apache.org/ojb/index.html">ObJectRelationalBridge
              (OJB)</a>. Egyrészt mert a Jakarta név már bizonyított,
              tisztában vagyok a licence szabályaival és amúgy is bejön.
              Persze aki nem ilyen elfogult, az megnézhet egy kis <a href="http://c2.com/cgi-bin/wiki?ObjectRelationalToolComparison">összehasonlítást</a>
              a létező perzisztens rétegek között. Ez a takaros lap cirka
              21 Java objektum-relációs bridge összehasonlítását
              tartalmazza 34 szempont alapján. Ezek közül amelyikről én
              többel hallottam az a LiDO, Cayenne, Jakarta OJB, Castor és
              Hibernate.</p>
					<p>
               A JDO teljes ODMG 3.0 szabvány API-t, a JDO API egy részét
              támogatja, ami alatt egy saját PersistentBroker API
              helyezkedik el, melyet én is használok. Az adatforrás lehet
              relációs és objektumorientált adatbázis-kezelő rendszer,
              LDAP vagy akár XML is.</p>
					<p>
               A konfigurációja (mapping) egy XML fájlal történik, ahol az
              objektumokat és a hozzá tartozó táblákat kell megadni. Itt
              definiálhatunk elsődleges kulcsot, mely automatikusan
              növekszik, külső kulcsot (1:n kapcsolatnál, ekkor a szülő
              osztály egy tömbbe vagy Collection-be tárolhatja a
              gyermekeket), illetve konverziós osztályokat (pl. ami
              boolean-ból int-et csinál). Persze utóbbiakat mi is
              gyárthatunk. Definiálhatunk proxy osztályokat is, melyekkel
              szabályozhatjuk, hogy ne töltsön be minden objektumot,
              melyre referencia van.</p>
					<p>
               Sajnos a reverse és forward engineering és mapping-et
              segítő toolok hozzá gyerekcipőben járnak. Ezek segítenének
              vagy a Java osztályból adatbázis definíciót gyártani, vagy
              fordítva, illetve a mapping-ot automatikusan létrehozni.</p>
					<p>
               Nagyon nagy mennyiségű adat esetén azonban ajánlom ezt a
              réteg kikerülését, vagy a proxy-k használatát, ugyanis az
              egyszerre több táblában való frissítés, illetve a rengeteg
              példányosítás jelentősen visszavetheti az alkalmazásunk
              teljesítményét. Pl. nagy riport készítése, napló
              karbantartása, stb...
             </p>
					<em>
              Viczi, 2003. január 23.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030126"/>
					<p>
              Volt már szó itt szervletekről, JSP-kről, de a <a href="http://www.jcp.org/en/jsr/detail?id=168">portletekről</a>
              még valahogy nem esett szó. A protletek tulajdonképpen webes
              komponensek, melyek a megjelenítéshez kötődnek. Hasonlítanak
              a szervletekhez azzal a különbséggel, hogy ezek nem teljes
              oldalt adnak vissza, mint a szervletek általában, hanem egy
              oldal egy komponensét, egy részletét. Kifejezetten portálok
              kiépítésére találták ki, hiszen tipikusan azok állnak
              különböző box-okból, melyek egy funkciót valósítanak meg
              (pl. top hírek, hírlevélre feliratkozás, szavazás, stb...).
              Természetesen a portletekhez is kitaláltak API-t, mely főleg
              a portál funkciókra koncentrál, ilyen a látogató
              felismerése, több eszköz (pl. kézi is) támogatása,
              lokalizációs és honosítással kapcsolatos megfontolások,
              biztonság és éles üzemben való változtatás.</p>
					<p>
               Ezek közé a boxok köré egy megjelenítő réteg épül, mellyel
              nem kell foglalkoznunk. Itt a felhasználó szabadon
              konfigurálhatja ablakszerűen a boxok megjelenését
              (minimalizáció, eredeti méret, egymáshoz viszonyított
              helyzet és méret). Természetesen már több megvalósítás is
              van, pl. a Jakarta Foundation, BEA, IBM, Sun és az Oracle
              cégeknek is van olyan szoftvere, mely nyújtja ezt az API-t.
              Én mikor először láttam, a PHPNuke és társai ugrott be,
              hiszen az is modulszerűen nyújtja a szolgáltatásokat. Itt is
              át lehet konfigurálni a kinézetet. Kérdéses, hogy a
              portletekből van-e hozzá annyi ingyenes megoldás, mint a PHP
              esetén.
             </p>
					<em>
              Viczi, 2003. január 26.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030127"/>
					<p>
						<img src="http://java.sun.com/j2se/1.4.2/docs/images/j2se9.2_arch3.gif" alt="Java architektúra" width="457" height="344" class="leftimgbrd"/> 
						Tudom, hogy kicsit le vagyok maradva,
              de most találtam egy cikket (sajnos már eltávolították azóta)
              a Linuxvilág (Linux Journal magyarországi társlapja,
              havonkénti megjelenéssel) oldalán egy cikket Michael
              Hirsch-től, amiben összehasonlítja a Java Linuxos
              megoldásait, magyarul egy csomó VM-et. Írt is rá egy
              egyszerű példaprogramot a sebesség tesztelésére, ami egy
              rakat objektumot példányosít. Szerintem ez egy kicsit
              túlegyszerűsített, de mind1. Eredményül kihozta, hogy a
              Windows-os megvalósítások sokkal gyorsabbak. Ne feledjük,
              2000 augusztusában. Kíváncsi lennék most mi a helyzet, én
              csak a SUN JDK-ját használom.</p>
					<p>
               Amiért felhoztam, az az, hogy van benne egy érdekes mondat,
              amit nagy okosságnak találtam:
             </p>
					<p>
						<i>"A programok gyorsabban válnak lassabbá, mint ahogy gépek
              gyorsabbá."</i>
					</p>
					<p>
              Milyen igaz. Holnap lesz a Sun Java konferenciája. Nagyon
              várom. Addig is itt egy nagyon szép kép, ami tiszteletet
              parancsol. Ugye mindenki tudja, hogy november óta a JavaTM 2
              Platform, Standard Edition (J2SETM) a 1.4.1_01-nél
              jár?
             </p>
					<em>
              Viczi, 2003. január 27.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030128"/>
					<p>
              Szóval megvolt a nagy esemény, és lezajlott a 3. Sun
              Fejlesztői Konferencia, ami a Budapesti Kongresszusi Központ
              Pátria termében volt megrendezve. A program a <a href="http://hu.sun.com/esemeny/fejlesztonap/program.html">kiadottal</a>
              egyező volt, azzal a különbséggel, hogy a A web alapú
              szolgáltatások és a Java 2 Platform, Enterprise Edition
              össze volt cserélve az utolsó előadással. Sajnos a kiadott
              anyagok nem igazán passzoltak az előadásokhoz, illetve volt,
              akinek nem is jutott. Viszont dicséretükre legyen mondva,
              hogy az ellátás első osztályú volt, kaja, pia, sőt
              ajándékokat is kaptunk bőven, egy <a href="http://wwws.sun.com/software/sunone/starterkit/">Sun ONE
              Starter Kit</a>, mappa, jegyzettömb, prosik, és aki
              kitöltötte az értékelő lapot, táskát, vagy pólót vagy valami
              elképzelhetetlenül hasznos nyomogatnivalót és egy
              kéziventillátort kapott.</p>
					<p>
               Az előadások rendben voltak, egy kivételével angol nyelven
              szóltak, és nem volt veszélyesen marketing szagú. Ha nem
              emlegették volna a Web Services szókapcsolatot annyiszor,
              akkor teljesen nyugodt lennék. Tudom, hogy most ez a fő
              irányvonal, és ezzel kell eladni, meg amúgy is, de kicsit
              sok volt. Viszont tetszett, hogy mindenről mutattak egy
              "Technology Big Picture"-t, amolyan Móricka-rajzot.</p>
					<p>
               Az első előadás és slide-ok nagyon ismerős voltak
              tavalyról, a Sun tervei, és irányvonalai. Természetesen a
              web alapú szolgáltatásokra koncentrálva. (Simon Ritter-től.)
              Másodszorra meghallgathattuk Fábián Péter előadását a Sun
              ONE 7.0 alkalmazásszerverről, ami teljesen új kódbázisra 
              épül, valamint annak három
              verziójáról (Platform, Standard és Enterprise - ez utóbbi
              még nem jelent meg). A Platform ingyenes, a Standard
              a multi-server managementtel snmp-vel, grafikus admin felülettel,
              directory serverrel bővíti ki a Standard szolgáltatásait, de 
              ezért már fizetni kell, és az Enterprise a HA (High Availability)
              funkciókkal tud többet.
              Megtudtuk, hogy főleg a iPlanet web
              szervert, Tomcat servlet containert és a Sun EJB konténert
              (referenciaimplementáció) heggasztették össze, és raktak
              hozzá legalább ennyi kódot. 
              Ezután a web alapú
              szolgáltatásokról hallottunk, főleg a JAX-RPC és JAXR
              API-król. Ez előbbi eljáráshívásra, míg utóbbi a névtárhoz
              (registry) való hozzáférésre szolgál. (Szintén Simon
              Ritter-től.) Majd Carol McDonald beszélt a J2EE-ről a
              gyakorlatban, ami főleg J2EE tervezési mintákról szól
              (design patterns). Üdítő volt ilyesmit egy nő szájából
              hallani, persze minden előitélet nélkül. A következő előadás
              a Sun ONE Studio-ról szólt, kis példával illusztrálva. Ez
              egy nagyszerű eszköz, integrálva bele a lehetőség portletek,
              midletek és web alapú szolgáltatások fejlesztésére.
              Természetes teljesen ezen eszközből adminisztrálható az
              alkalmazásszerver, így nem kell több ablakot nyitogatnunk. A
              következő előadást első része a MIDP 1.0-ról szólt, míg a
              második rész a MIDP 2.0 újdonságairól. (Erről már írtam,
              különösen a sprite-ok tetszettek, és egy eljárás a telefon
              vibramotorjának vezérlésére!) Utolsóként a J2EE 1.4
              újdonságairól szólt (hehe, web alapú szolgáltatások, na itt
              már végleg besokalltam), de szó esett a Servlet API 2.4-ről,
              JSP 2.0-ról, EJB 2.1-ről és egy csomó más újdonságról.</p>
					<p>
               Aki többet akar tudni, érdemes elmennie az <a href="http://developers.sun.com/events/techdays/">EvangCentral</a>
              oldalra, hiszen ezt a konferenciát is a Technology
              Evangelism csapat tagjai tartották. Szép volt, jó volt,
              elmúlt. Jövőre találkozunk.</p>
					<p>
               A HWSW-n is megjelent egy <a href="http://www.hwsw.hu/hir.php3?id=19676">cikk</a> róla.
             </p>
					<em>
              Viczi, 2003. január 28.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030208"/>
					<p>
              No, egy hosszabb szünet után ismét itt vagyok, ugyanis
              sítáborban voltam Fai Della Paganella (Olaszország) nevű kis
              faluban, ahol sem Java-val kapcsolatos impressziók nem
              értek, sem gépet nem láttam.</p>
					<p>
               Azóta biztos sokminden történt, bár még nem vagyok képben,
              pár dolgot leírok.</p>
					<p>
               A 3. Sun fejlesztői konferencia <a href="http://hu.sun.com/esemeny/fejlesztonap/presentations.html">előadásait</a>
              kitették StarOffice 6.0 és PDF formátumokban, érdemes
              megcsekkolni őket.</p>
					<p>
               Mint rendesen, most is érkezett egy korrekt kis OO
              Programming Newsletter Bruce Eckel-től, jelenleg a 46-os
              számú. Ír a <a href="http://www.digitalmars.com/d/">D programozási
              nyelvről</a>, ami nekem új. Ez lényegében a C és C++
              továbbfejlesztése, magasabb absztrakciós szintre hozása,
              viszont a visszafelé kompatibilitást elhagyták, és a modern
              nyelvekre jellemző dolgokat mind belepakoltak (beépített
              String kezelés, szemétgyűjtés, többszálúság). Nem követi a
              manapság divatos VM irányzatot, azaz semmi interpreter,
              hanem fordító nyomja gépi kódra. Ügyes próbálkozás, nem
              tudom mennyire lesz életképes, de érdemes megnézegetni.
             </p>
					<em>
              Viczi, 2003. február 8.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030209"/>
					<p>
						<img src="http://ant.apache.org/images/ant_logo_large.gif" alt="Apache Ant" width="190" height="120" class="rightimgbrd"/> 
						Furcsa, hogy többször említettem már az
              Ant-ot, de még sosem áradoztam róla bővebben. Nemrég (2002.
              november) amúgy is egy nagyobb változás történt, ugyanis az
              Apache-on belül az Ant top level project lett, azaz nem a
              Jakarta alá tartozik, így a <a href="http://ant.apache.org/">honlapjának</a> címe is
              megváltozott. Persze ez nekünk, felhasználóknak semmit sem
              jelent, technikai szempontból nincs változás, és ugyanúgy
              együtt fog működni a Jakarta-s projectekkel, mint eddig.
              Sőt, tervezik már a 2-es verziót, a felhasználók <a href="http://ant.apache.org/ant2/requested-features.txt">feature
              request</a>-jei alapján.</p>
					<p>
              </p>
					<p>
               Mi is az Ant? Egy Java alapú build tool (fordításhoz,
              disztribúció készítéshez, installáláshoz, teszteléshez),
              hasonló a Make-hez, csak sokkal elegánsabb. Ez egyrészt
              jelenti azt, hogy a konfigurációs fájl könnyebben olvasható
              (lévén egy szimpla XML), illetve platformfüggetlen. Ez
              utóbbit úgy valósították meg, hogy teljesen Java nyelven
              valósították meg, így ugyanúgy működhet különböző operációs
              rendszereken, és kihasználja a párhuzamosságot, és
              használhat különböző java eszközöket egyazon virtuális gépen
              belül.</p>
					<p>
               Az Ant-ot parancssorból kell indítani (paraméterezhető
              paramétereken és környezeti változókon keresztül), és az XML
              formátumú build.xml fájlt keresi, mellyel a fordítási
              folyamat kontrollálható. Tartalmaznia kell egy project-et,
              ezen belül legalább egy (alapértelmezett) target-et, melyek
              közötti függőségi viszony adható meg. A target-ek
              tetszőleges számú task-ból állnak, melyek a tulajdonképpeni
              munkafolyamatok. Ezeket XML attribútumokkal vagy beágyazott
              XML tag-ekkel lehet felparaméterezni. Fontos elemek egy
              project-en belül a property-k, melyek string értékek egy
              névhez rendelve. A későbbiekben ${property_name} formában
              hivatkozhatunk rájuk. Több task-nál is fájlt/fájlokat vagy
              könyvtárat/könyvtárakat kell megadnunk, ebben segít a
              DirSets, FileSets, és FileList elemek.</p>
					<p>
               Rengeteg beépített task-kal rendelkezik, csak néhány példa
              a sok közül: Ant futtatása az Ant-on belül, rendszer parancs
              futtatása, build number kezelése, különböző be- és
              kitömörítések, checksum készítése, fájl és könyvtár
              jogosultságok állítása, másolás, törlés, mozgatás, cvs-hez
              való hozzáférés, jar, war, ear fájl készítése, fordítás,
              futtatás, kvt. létrehozása, patch parancs futtatása, levél
              küldése, RMI csonkok generálása, JavaDoc futtatása, Jar
              aláírása, SQL parancs futtatása JDBC-n keresztül, touch,
              XSLT transzformáció. Természetesen saját API-ja is van, így
              saját programból is használhatjuk a szolgáltatásait, illetve
              komponenseket, task-okat írhatunk hozzá.</p>
					<p>
               Aki eléggé profinak érzi magát az Ant használatában, az
              esetleg kipróbálhatja magát ebben a <a href="http://java.sun.com/developer/Quizzes/misc/ant.html">
              tesztben</a>. A Developer.Com-on is van három <a href="http://www.developer.com/java/other/article.php/998241">cikk</a>
              az Ant-ról, egy bevezetés jellegű, egy könyvtárstruktúráról
              szóló és egy deploy-t elemző.
             </p>
					<em>
              Viczi, 2003. február 9.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030210"/>
					<p>
              Pörögnek itt a dolgok rendesen a Java világban. Egyrészt
              kiszivárgott a Sun egy belső <a href="http://www.internalmemos.com/memos/memodetails.php?memo_id=1321">
              jelentése</a>, melyről a <a href="http://www.prog.hu/news.php?qnid=1182">Prog.Hu</a> is ír,
              nevezetesen arról van szó, hogy több belső munkatárs is
              kritizálja a Java nyelvet (főleg Solaris operációs rendszer
              esetén), és nem találják elég produktívnak, valamint
              megbízhatónak. Azóta megjelent egy 
              <!-- http://www.root.hu/?c=3338 -->
              cikk a Root.Hu-n is ugyanerről. (Azóta a Root.Hu portál megszűnt létezni, ezért a további linkeket
              is kénytelen vagyok eltávolítani.)</p>
					<p>
               Több ingyenesen is letölthető könyvet is találtam,
              elsősorban a J2EE szerelmeseinek, ezeket érdemes letölteni:
             </p>
					<ul>
						<li>
							<a href="http://www.theserverside.com/books/wiley/masteringEJB/index.jsp">
               Mastering EJB</a>
						</li>
						<li>
							<a href="http://www.theserverside.com/books/wiley/EJBDesignPatterns/index.jsp">
               EJB Design Patterns</a>
						</li>
						<li>
							<a href="http://www.theserverside.com/books/manning/J2EEXML/index.jsp">
               J2EE and XML Developement</a>
						</li>
					</ul>
					<p>
              Persze ezen kívül rengeteg cikket, készülő könyvet,
              segédanyagot találunk a <a href="http://www.theserverside.com/articles/index.jsp">TheServerSide.com</a>
              resources oldalain.</p>
					<p>
               Közben végre 
              megnyílt az <a href="http://www.openeai.org/">OpenEAI
              Project Web Site</a>, letölthető dokumentációkkal (üzenet
              protokoll, API bevezetés, implementációs stratégiák és
              deployment minták) és ígéretekkel (bevezető, metodológia,
              üzenet definíciók). Alkalmazás integrátoroknak kötelező
              darab.</p>
					<p>
               Közben megtaláltam, hogy nem csak az Ant project ment át
              top level project-nek az Apache-nál, hanem az Avalon
              (keretrendszer és komponensek), James (e-mail/news/messaging
              szerver) és az ObJectRelationalBridge (objektum/relációs
              mapping tool). Ez utóbbi az <a href="http://db.apache.org">Apache DP project</a> alá költözött a
              Torque-csal együtt, mely egy eredetileg a Turbine
              keretrendszer részeként fejlesztett perzisztens réteg. Egyéb
              kavar is volt az Apache háza táján, de én csak a Java-s
              részekre koncentráltam. Elindult egy Web Services project
              is, a webes szolgáltatások írásának, használatának
              megkönnyítésére. Sőt, Wiki-t is indítottak, melyről már
              beszéltem. Az xml-lel még mindig a <a href="http://xml.apache.org">xml.apache.org</a> foglalkozik, az
              Incubator a kezdeti stádiumban lévő projectek/ötletek
              gyűjtőhelye (2002 októberétől), a Commons pedig az
              újrafelhasználható kódok gyűjteménye lenne (kezdeti
              stádiumban van még).</p>
					<p>
               Ha már volt szó a Borland OptimizeIt szoftveréről, érdemes
              megemlíteni a <a href="http://www.borland.com/opt_servertrace/">Optimizeit
              ServerTrace</a> alkalmazást is, mely egy J2EE teljesítmény
              monitorozó eszköz, mellyel a tesztelés közben kiszűrhetők a
              potenciális erőforrás-zabáló helyek, stb. Figyelemmel
              kísérhetjük a legfőbb J2EE komponenseket, beleértve a JDBC,
              JSP, JNDI, EJB és JMS komponenseket.
             </p>
					<em>
              Viczi, 2003. február 10.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030216"/>
					<p>
              Idén is megrendezik a <a href="http://www.challenge24.org/">24-órás programozói
              versenyt</a> a BME-n, immár harmadszor. A verseny nemzetközi
              lesz, hivatalos nyelve az angol. 2003. május 16 és 18 között
              rendezik meg. Maximum 40 csapat lehet jelen. Ha ennél több
              csapat jelentkezik (a jelenlegi regisztrációs rendszer még
              teszt üzem, adatai törölve lesznek), akkor lesz egy
              elektronikus előválogató, melynek tervezett időpontja 2003.
              aprilis 12. A nyeremény még nem ismert a szponzorok
              hiányában, tehát szponzor kerestetik!</p>
					<p>
               Ezen a versenyen voltam tavaly is, meg az előtte két évvel
              levőn is, és nagyon jól éreztem magamat, mindkétszer
              harmadik helyezést értünk el a KergeBirge nevű csapattal,
              Erdei Szabolcs és Klampeczki Zsolt kollegámmal. Az első
              versenyen egy futball szervert, klienseket és monitort
              kellett írni, melyek TCP halózaton UTP-vel kommunikáltak. A
              másodikon egy Mindstorm robotot kellett vezérelni egy
              labirintusban. Kíváncsian várom, mi lesz a következő
              feladat!</p>
					<p>
               A részvétel feltétele, hogy a csapat 3 fős legyen, és fel
              kell tölteni angol CV-t. Mindent lehet hozni, könyvet,
              szoftvert, hardvert, csak mobilt és Internetet nem lehet
              használni. A verseny ideje alatt a versenyzők teljesen el
              lesznek zárva a külvilágtól, ki nem mehetnek, be nem
              jöhetnek vendégek, és cuccot később bejuttatni sem
              szabad.</p>
					<p>
               Csizmazia Balázs, a J2EE útikalauz Java programozóknak c.
              könyv egyik szerzője küldött egy e-mail-t, melyben
              visszajelzést szeretne kapni a könyvről. A levélhez egy
              kérdőívet is csatolt, amit kitöltve vissza kéne küldeni
              neki. Akinek esetleg megvan, és olvasgatta, és véleménye
              van, és közölni szereté a szerzőkkel, az írjon egy levelet
              nekem, és továbbküldöm neki a kérdőívet.</p>
					<p>
               Bekerültem végre a dmoz.org Open Directory Project <a href="http://dmoz.org/World/Magyar/Sz%e1m%edt%e1stechnika/Programnyelvek/">
              Magyar/Számítástechnika/Programnyelvek</a> könyvtárába. Ez a
              project a Web legnagyobb, legátfogóbb, hozzáértők által
              szerkesztett könyvtára. Mégis magyar linkek közül csak 3157
              szerepel benne. A könyvtárral több kereső, pl. a Google is
              szinkronizál. Tehát gyerünk <a href="http://dmoz.org/add.html">regisztrálni</a>.</p>
					<p>
             </p>
					<em>
              Viczi, 2003. február 16.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030217"/>
					<p>
              Persze a kiszivárgott Sun-os Java pocskondiázásnak :) is <a href="http://www.prog.hu/news.php?qnid=1192">kiderült</a> az
              eredete. A tanulmányka tényleg Sun-os, de két évvel ezelőtt
              íródott, és egy régi implementációra vonatkozik, ami azóta
              elvesztette az érvényét. Ezzel világossá vált az is, hogy
              nem a Microsoft kreálta a doksit.</p>
					<p>
               Természetesen a MS - Sun perben is történtek előrelépések
              (???), az MS arra kéri a bíróságot, hogy előző ítéletét
              vonja vissza. Addig is a Sun JVM-je elérhető a Windows
              Update-en keresztül. 
              
              <!-- Bővebben a Root.Hu egy <a href=
              "http://www.root.hu/?c=3368&amp;PHPSESSID=9dbdcb3f890996c3850e282614ce9ad3">
              cikke</a> értekezik erről. -->
					</p>
					<p>
               A Windows XP SP1a már nem is telepíti a Microsoft VM-et, de
              azért külön <a href="http://www.terminal.hu/newsread.php?id=02203503032418">letölthető</a>,
              akinek szüksége van rá. Persze már az SP1a-t sem érdemes
              feltenni, hiszen jön az SP1b, ami már a Sun VM-jét fogja
              tartalmazni, ahogy a Terminal is <a href="http://www.terminal.hu/newsread.php?id=03205002034715">írja</a>.
             </p>
					<em>
              Viczi, 2003. február 17.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030227"/>
					<p>
              Sajnos mostanában ritkábban van időm ide írdogálni, de azért
              igyekszem. Nemrég írtam az Ant-ról, és aki azóta megnézte és
              próbálgatta, most egyből ellenőrizheti a tudását ezen a <a href="http://developer.java.sun.com/developer/Quizzes/misc/ant.html">
              teszten</a>. Írtam már a kódolási konvenciók hatékonyságáról
              is, és most a Sun-nál megjelent egy újabb <a href="http://java.sun.com/developer/technicalArticles/javaserverpages/code_convention/">
              cikk</a>, mely azt taglalja, milyen konvenciókat
              alkalmazzunk JavaServer Pages használatakor.</p>
					<p>
               Itt ír a <a href="http://java.sun.com/j2ee/javaserverfaces/">JavaServer
              Faces</a> technológiáról, mely egy programozási modell, és
              lehetővé teszi, hogy újrafelhasználható beviteli
              komponenseket (form elemek) használhassunk, ezekhez a
              komponensekhez rendeljük hozzá az alkalmazás üzleti
              objektumait, illetve szerver oldali eseménykezelőket
              használjunk. A JavaServer faces magába foglal egy API-t,
              mellyel a komponensek állapotát szabályozhatjuk,
              eseménykezelőket írhatunk, adatokat ellenőrizhetünk. Ezen
              kívül tartalmaz egy JSP custom tag library-t, mellyel a JSP
              funkcióit bővíthetjük ki a JavaServer Faces modelljének
              megfelelően. Tulajdonképpen ekkor nem kell a markup nyelvhez
              kötődnünk, azaz a beviteli elemeket nem HTML nyelven adjuk
              meg, hanem ezekkel a custom tag-ekkel. Így egy JSP akár több
              eszközt is kiszolgálhat, mint pl. web vagy wap
              böngészőt.</p>
					<p>
               Gyakorlatban ez úgy néz ki, hogy ez a réteg a prezentációs
              illetve alkalmazás réteget köti össze úgy, hogy élesen el is
              határolja a kettőt egymástól. A JSP-re épül rá a
              prezentációs oldalon, így nem kell nekünk vesződnünk a form
              által küldött paraméterek elemzésével, validálásával és
              feldolgozásával, hanem a ez automatikusan történik, illetve
              egy esemény modellt is vezet be, hasonlóan a vastag kliensek
              építése esetén, azaz a form-on elhelyezkedő gombok eseményt
              generálnak. Ezen kívül a beviteli elemek állapotát is az
              API-n keresztül tudjuk befolyásolni, és nem a HTML nyelvvel
              kell bűvészkednünk.</p>
					<p>
               Egy JavaServer Faces lap életciklusa a következő: a
              böngésző elküldi a kérést, és a szerver oldalon felépül egy
              fa, mely a beviteli komponenseket tartalmazza. Ezután a
              fáben szereplő összes komponens konkrét értéket kap, melynek
              nem változott az értéke, az elküldött paraméterek alapján.
              Ezután lehet olyan eset, hogy az egyik komponens értékének
              függvényében megváltozik egy másik komponens. Ekkor újra
              felépül a fa, és a kliensnek visszakerül az új oldal, immár
              a változott értékekkel. Ha nincs ilyen helyzet, akkor a
              változtatott értékeket validálni, ellenőrizni kell. Ha
              elfogadhatóak, akkor megy tovább a végrehajtás, ha nem,
              akkor hibaüzenet megy a böngészőnek. Ha a megváltoztatott
              adat elfogadható, akkor a fában a megfelelő komponens értéke
              erre változik. Ezután hajtódhat végre az üzleti logika, majd
              a választ a szervlet lerendereli, és elküldi a
              böngészőnek.</p>
					<p>
               Hogy miben más ez, mint a The Sun ONE Application Framework
              (JATO) vagy a Struts? Elég sok átfedés van, de alapjaiban a
              JavaServer Faces egy egyszerű komponens modellt szeretne
              adni, míg a másik két technológia magasabb szinten mozog.
              Ideális eset az lenne, ha a másik két framework a JavaServer
              Faces-re építene, közvetlenül a JSP helyett. Természetesen a
              <a href="http://jcp.org/en/jsr/detail?id=127">szabványosítási
              kérelem</a> is be van adva. Aki jobban meg akar ismerkedni
              vele, ajánlom a <a href="http://java.sun.com/j2ee/javaserverfaces/docs/tutorial.html">
              tutorialt</a>, illetve egy Qusay H. Mahmoud által írt cikket
			  <a href="http://java.sun.com/developer/technicalArticles/GUI/JavaServerFaces/">cikket</a>.
             </p>
					<em>
              Viczi, 2003. február 27.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030228"/>
					<p>
              Több hozzászólásomban is említettem már a <a href="http://java.sun.com/products/jms/">JMS</a> fogalmat, de
              bővebben még nem írtam róla. No, épp itt az ideje.</p>
					<p>
               A Java Message Service (JMS) egy Sun által fejlesztett API,
              ami már bekerült a J2EE 1.3-as verzióba is, ami azt jelenti,
              hogy az ezt, vagy ennél magasabb J2EE verziót támogató
              alkalmazásszerverek már megvalósítják. A JMS tulajdonképpen
              megbízható, flexibilis szolgáltatást nyújt kritikus üzenetek
              átvitelére. Eddig is léteztek üzenet átvívő szoftverek
              (szépen mondva üzenetorientált middleware-ek), de a JMS API
              megjelenése biztosítja a hordozhatóságot, illetve azt a
              biztonságot, hogy a köztes szoftver cseréje esetén nem kell
              új API-t megtanulni. A további kapcsolódó újdonságok a J2EE
              1.3 platform esetében az üzenet-vezérelt bean-ek, illetve a
              Java Transaction API (JTA), ami lehetővé teszi, hogy ne csak
              az adatbázis műveleteket lehessen egy tranzakción belül
              kezelni, hanem akár az üzeneteket is.</p>
					<p>
               Az üzenetküldés lehetővé teszi két pont közötti
              kommunikációt, üzenet továbbítást. A JMS tulajdonképpen ez
              üzenet sorakoztatást feltételezi, azaz a komponensek lazán
              kapcsoltak lehetnek, nem muszáj az üzenet küldésekor akár a
              közvetítő közegnek, akár a cél pontnak elérhetőnek lennie.
              Az üzenet csak akkor továbbítódik, ha a kapocslat helyreáll.
              Ezen kívül a JMS biztosítja az asszinkron üzenetküldést,
              azaz a beérkező üzenetet nem kell azonnal feldolgozni, hanem
              akár a cél állomásnál várakozhat, illetve természetesen a
              szinkron átvitelt is, azaz a kliens célállomás futása addig
              szünetel, míg a következő üzenet meg nem érkezik. Garantálja
              a megbízhatóságot, ami azt jelenti, hogy az üzenet a
              feladóhoz egyszer, és csakis egyszer érkezik meg, és biztos,
              hogy megérkezik.</p>
					<p>
               A JMS architektúra következő elemekből épül fel: JMS
              szolgáltató (a JMS-t megvalósító komponens), JMS kliensek
              (melyek igénybe veszik a szolgáltatást), az üzenetek
              (tulajdonképpeni bájt folyamok), az adminisztrált objektumok
              (destination és connection factories), illetve a natív
              kliensek (a JMS szolgáltató szolgáltatásait natív API-n
              keresztül veszik igénybe).</p>
					<p>
               Két felhasználási mód lehetséges, egyik a point-to-point,
              ami két pont közötti üzenetküldést valósítja meg, illetve a
              publish-and-subscribe, ahol tulajdonképpeni topic-ok vannak,
              melyekre az üzenetküldők küldik az üzeneteket, és csak azon
              kliensek kapják meg, melyek az adott topic-ra
              feliratkoztak.</p>
					<p>
               Az J2EE 1.3 szabványt támogató alkalmazásszerverek mellett
              rengeteg JMS implementáció van, ezek közül néhány: <a href="http://www-306.ibm.com/software/integration/wmq/">IBM
              WebSphere MQ</a>, <a href="http://openjms.sourceforge.net/">OpenJMS</a>, <a href="http://www.fiorano.com/products/fmq/overview.htm">FioranoMQ</a>,
              <a href="http://www.sonicsoftware.com/products/sonicmq/index.ssp">SonicMQ</a>,
              <a href="http://www.swiftmq.com/products/router/index.html">SwiftMQ</a>,
              <a href="http://www.recursionsw.com/products/voyager/voyager.asp">Voyager</a>
						<a href="http://www.tibco.com/solutions/products/active_enterprise/enterprise_for_jms/default.jsp">
              TiBCO Enterprise for JMS</a>. Ingyenes megoldásként a fent
              említett OpenJMS vagy <a href="http://www.jboss.org/index.html">JBoss</a> alkalmazásszerver
              említhető.
             </p>
					<em>
              Viczi, 2003. február 28.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030302"/>
					<p>
              Mostanában sokszor találkozik az ember a JCP és JSR
              rövidítésekkel. Nem csak új API-k megjelenésekor, hanem
              mostanában elég sokan bírálják is ennek működését. Nézzük
              meg, hogy mit is jelentenek ezek. A <a href="http://jcp.org/en/home/index">Java Community Process
              (JCP)</a> egy nyitott szervezet, mely Java fejlesztőkből
              áll, 1995 óta működik, és feladatuk Java-hoz kapcsolódó
              specifikációk kidolgozása, referencia implementációk
              elkészítése, ezáltal technológiák megalapozása. Bárki tagja
              lehet (cég, szervezet, magánszemély), aki aláírja a Java
              Specification Agreement-et (JSPA), mely leírja a tagok
              jogait és kötelességeit. A Process Management Office (PMO)
              egy Sun által kijelölt szakértői csoport, mely a JCP
              irányítását és működtetését végzi. A Java Specification
              Request (JSR) egy a PMO-nak küldött dokumentum, mely egy
              javaslatot tartalmaz egy új specifikációra, vagy jelentős
              változtatásra. Ha <a href="http://jcp.org/en/jsr/all">megnézitek</a> iszonyat sok JSR
              van, és a legfontosabb specifikációk is ez alatt futnak,
              úgymint a Java 2, Standard Edition, Enterprise Edition,
              Micro Edition, JSP, Servlet, JDBC, JavaBeans, JTA, JMS,
              JavaMail, stb.</p>
					<p>
               Ha valaki egy új specifikációt kíván beadni, a következő
              fázisokon kell végigmennie. Először JCP taggá kell vállni,
              ami bárki számára lehetséges, majd be is lehet adni a JSR-r
              a PMO-nak. (Jó ez a sok rövidítés.) Eztán a JCP vezetősége
              (executive comitee - EC) vagy elutasítja, vagy elfogadja
              azt. Két vezetőség van, az egyik a J2SE és J2EE feletti
              munkálatokat, a másik a J2ME dolgait irányítja. Mindegyik
              vezetőség 16 tagból áll, kiket a JCP tagok szavaznak meg.
              Persze a Sun mindkettőnek tagja. Eztán el lehet kezdeni
              dolgozni a specifikáció tervezeten más szakemberekkel, amit
              majd az összes JCP tag elé kell tárni. Amint ez is megvan,
              mindenki számára elérhetővé kell tenni, és közben el lehet
              kezdeni a referencia implementáció elkészítését, illetve
              tesztesetek egy halmazát (technology compatibility kit -
              TCK), melyeket sikeresen teljesíteniük kell a többi
              interpretációnak is, a kompatibilitást biztosítandó. Eztán
              mégegyszer szavaz az EC a tervezet elfogadásáról, és ha
              igennel szavaznak, akkor a JSR specifikációvá válik. Aztán
              ezt karban is kell tartani. Erről az egészről szerepeljen is
              egy képecske.
             </p>
					<div class="centerimgbrd">
					<img src="http://jcp.org/images/introduction/timeline-sml.gif" alt="Egy JSR életútja" width="639" height="276"/>
					</div>
					<p>
              Jelenleg a JSR-ek 58%-át nem Sun-os dolgozók adták be, ami
              azt is jelenti, hogy a Sun "uralma", irányítása a Java nyelv
              és technológiák fölött kissé kezd meggyengülni.</p>
					<p>
               A JCP-t sokan kritizálják a hatékonysága (lassú sebessége)
              miatt, erről érdemes elolvasni egy két részből álló hosszabb
              <a href="http://www.javaworld.com/javaworld/jw-11-2002/jw-1108-jcp.html">
              cikket</a>, mely az érveit számadatokkal támasztja alá.
             </p>
					<em>
              Viczi, 2003. március 2.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030303"/>
					<p>
              Kijött a Java 2 SDK SE Version 1.4.1_02 Windows, Linux és
              Solaris operációs rendszerekre, 
              <!-- http://www.root.hu/?c=3423 , http://www.root.hu/?c=1479 -->
              amely egy csomó hibát
              javít. Jelentős előrehaladás született abban is, 
              hogy a Java-t OSBOS (Open-Source
              BeOS-compatible Operating System) rendszerekre portolták.
              Jelenleg van futó (műkődő?) java és javac fájluk, már "csak"
              az AWT-t és JFC-t (Java Foundation Classes) kell
              implementálniuk. Hmmm.</p>
					<p>
               Muszáj idéznem a <a href="http://www.hardwired.hu">Hardwired</a>-ről, az izgalom "életunt
              hegyi mufloncsiga mélabús zarándoklatának figyelésével
              egyenértékű". Remélem, nem haragszanak meg.</p>
					<p>
             </p>
					<em>
              Viczi, 2003. március 3.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030306"/>
					<p>
              hivatalosan is kihirdették, hogy meg lesz tartva a BME 3.
              Nemzetközi 24-órás Programozói Versenye, így már lehet
              jelentkezni a <a href="http://www.challenge24.org">hivatalos
              honlapján</a>. Először egy elektronikus előválogató lesz túl
              sok csapat esetén (&gt;40), aztán jön a kihívás május 16-18
              között. Én ott leszek. :)</p>
					<p>
						<!-- http://www.root.hu/?c=3444&amp;PHPSESSID=994c6984d7447800509b9a3f199f3a89 -->
              Nagyon nagy keletje van a Sun által fejlesztett
              Jxta csomagnak, mely peer-to-peer alkalmazások fejlesztését
              könnyíti meg, bizonyítja ezt, hogy túl van az egymilliomodik
              letöltésen.</p>
					<p>
               Aki már próbált olyan szoftvert konfigurálni, ami a
              felhasználókhoz jogosultságokat rendel, azokat csoportba
              osztja, stb., tudja, hogy ahány szoftver (operációs
              rendszer), annyi megvalósítás és tudjuk, hogy ezen a téren a
              webes szolgáltatások sincsenek eleresztve. Úgy tűnik, erre
              mások is rájöttek, és a problémát az ilyen kompatibilitási
              problémáknál jól jövő XML formátumot lovagolták meg, és
              dolgoztak ki egy formátumot, XACML (eXtensible Access
              Control Markup Language) néven. Hogy ez el is terjedjen, az
              OASIS (Organization for the Advancement of Structured
              Information Standards ) konzorcium nyílt szabványnak 
              kiáltotta ki. Tehát az XACML egy olyan kiterjeszthető
              nyelv, mellyel XML formátumban tudjuk a felhasználók
              erőforrásokhoz való hozzáférésének karbantartását szabványos
              formában leírni. Természetesen már található egy olyan
              könyvtár Java-hoz is, ami képes ezt a formátumot olvasni, és
              megfelelően értelmezni, így nem nekünk kell parser-t írni,
              csupán elég ezt az API-t megismerni, és használni. Ezt az
              implementációt a Sun készítette természtesen Java nyelven,
              további információk a project <a href="http://sunxacml.sourceforge.net">honlapján</a>.
             </p>
					<em>
              Viczi, 2003. március 6.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030311"/>
					<p>
              Nemrég írtam a JMS kapcsán a <a href="http://www.fiorano.com">Fiorano</a>-ról, no most újra
              feltűnt a hírekben azzal, hogy csatlakozott az <a href="http://www.eaiindustry.org/">EAI Industry
              Consortium</a>-hoz, mely egy non-profit csoport, mely
              támogatja az Enterprise Application Integration-nel
              kapcsolatos kutatásokat, úgymint szabványok, best practices
              tanácsok, metodológiák és irányvonalak kifejlesztését,
              valamint oktatását. A csoportnak már húsznál is több tagja
              van, persze közte van a Sun is.</p>
					<p>
               Az EAI definíciója, melyet itt találtam: olyan alkalmazások
              integrálásának folyamata, melyeket egymástól függetlenül
              fejlesztettek, általában inkompatibilis technológiákat
              alkalmazhattak, és megmaradtak egymástól függetlenül
              kezelhetőnek.</p>
					<p>
               A Fiorano fő terméke a FioranoMQ, mely szerintük a
              leggyorsabb, legskálázhatóbb JMS szerver, illetve a Tifosi,
              egy Integrator Broker Suite, mely olyan technológiákra épül,
              mint a JMS, XML, Web Services, SOAP, és a többi.</p>
					<p>
               Ha már annyira az alkalmazásintegrációnál tartunk, érdemes
              megemlíteni, hogy a <a href="http://www.bea.com/index.jsp">Bea
              Systems</a> is 
              kijött a Weblogic Enterprise Platform 8.1-es
              verziójával, mely a következő komponenseket tartalmazza:
              Integration, mely egy keretrendszer alkalmazások
              integrációjára, mind üzleti logika, mind managelhetőség
              szintjén, Workshop, ami egy fejlesztői környezet, Portal,
              portálok üzemeltetésére (Portlet támogatással), és a Server,
              mely maga az alkalmazásszerver. 
              Megjelent a <a href="http://java.quest.com/jprobe/jprobe.shtml">JProbe</a> 5-ös
              verziója is, melyben egyrészt a Memory Debugger használatát
              egyszerűsítették, illetve a Profiler-t gyorsították meg
              valami iszonyatosan. Ezeken kívül lehetőség van objektumok
              figyelésére név, szám és méret alapján, PDF riportolásra,
              távoli analízisre. A csomag tartalmaz egy JavaHelp
              dokumentációt, illetve tutoriálokat és példákat.
             </p>
					<em>
              Viczi, 2003. március 11.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030312"/>
					<p>
              Ha már ennyire rákattantam az alkalmazás integrációra, nem
              szabad elmenni amellett sem, hogy az IBM <a href="http://www.ibm.com/software/integration/030403pr.html">bejelentette</a>
              a <a href="http://www.ibm.com/software/integration/bi-launch.html">Websphere
              Business Integration</a> szoftver portfoliójának bővítését.
              A főbb területek: üzleti folyamatok modellezése és
              szimulációja, személyek, folyamatok és alkalmazások
              integrációja, kapcsolódás az ügyfelekhez és üzleti
              partnerekhez, üzleti folyamatok nyomon követése, illetve
              ezek hatékonyságának felmérése és növelése. Hogy ezen
              feladatok mindegyikére legyen kész megoldás, a következő
              termékeket vezette be: IBM WebSphere Business Integration
              Modeler, IBM WebSphere Business Integration Server V4.2 és a
              IBM WebSphere Business Integration Monitor.</p>
					<p>
               Másik vesszőparipám mostanában a web-alapú keretrendszerek,
              és a Jakarta oldalán megjelent egy újabb, méghozzá <a href="http://jakarta.apache.org/proposals/tapestry/index.html">Tapestry</a>
              néven. A következő előnyökkel rendelkezik:
              újrafelhasználható komponensek, URL és paraméterek helyett
              metódushívások, könnyű internationalization és localization.
              Megjelenési réteg, és üzleti réteg elhatárolása,
              modell-view-controller tervezési minta használata.</p>
					<p>
               Még egy vicces <a href="http://www.hcgamer.hu/gamer/index.php?p=5&amp;c=6685&amp;hw=1&amp;h=1">dolog</a>,
              hogy Game Boy Advance (SP)-re is lehet ezek után Java
              alkalmazásokat <a href="http://www.ajile.com/">fejleszteni</a>, és azokat futtatni.
              Ehhez egy külön kártya kell, mely egy J-100-as Java procit
              és M3 dekódert tartalmaz.
             </p>
					<em>
              Viczi, 2003. március 12.
             </em>
					<!-- Helyesírás ellenőrzés vége. -->
				</div>
				<div class="centerbox">
					<a name="20030318"/>
					<p>
              Ezennel látogatóim száma túllépte a bűvös 1000 szamot.
              Köszönöm mindenkinek, aki megnézte ezt az oldalt, külön
              köszönet annak, aki vissza is tért időnként. Kérlek,
              amennyiben mármi ötletetek, megjegyzésetek, véleményetek
              van, vagy hibát találtok az oldalamon, jelezzétek. Esetleg
              ha valaki hostolni is tudná az oldalt, azt is megköszönném.
              Oldalt kitettem linkeket a cikkeimre, fel is került egy
              újabb, mely az Apache ObJectRelationalBridge (OJB) köztes
              rétegről szól. Vigyázzatok, a cikkek csak részletek, a
              teljesehez írjatok levelet!</p>
					<p>
               A Sun-nál van egy remek <a href="http://java.sun.com/developer/technicalArticles/WebServices/amazonws/">
              cikk</a> arról, hogyan fejlesszünk olyan kliens programot
              (Swing felülettel), mely web-szolgáltatásokat vesz igénybe.
              Példaként az Amazon web-szolgáltatását használja, mellyel az
              adatbázisában turkálhatunk. A megoldáshoz Sun ONE Studio 4
              fejlesztőkörnyezetet használ.</p>
					<p>
               Egy másik <a href="http://java.sun.com/developer/technicalArticles/WebServices/jaxb/">
              cikk</a> a JAXB (Java Architecture for XML Binding)
              arhitektúráról szól. Imádom az XML-hez és
              web-szolgáltatásokhoz tartozó 3, 4 esetleg 5 betűs
              rövidítéseket. Egyik konferencián volt, hogy látszik, hogy a
              számítástechnika fejlődik, hiszen a 3 betűsekről már
              áttérünk a több betűsekre.</p>
					<p>
               A legegyszerűbb megoldás az XML adatok feldolgozására a <a href="http://java.sun.com/xml/jaxp/index.jsp">Java API for
              XML Processing</a>, mely tartalmaz két feldolgozási módot
              is, úgymint a <a href="http://www.saxproject.org/">Simple
              API for XML</a>, vagy a <a href="http://www.w3.org/DOM/">Document Object Model</a>.
              Valószínű sokan dolgoztak már ezzel, a SAX folyamatosan
              olvassa az XML dokumentumot, és tag, attribútum, vagy tag-ek
              közötti karakterek esetén egy eseményt generál, melyet a
              programnak kell feldolgoznia, így állítani elő a szükséges
              objektumokat. A SAX nem tart semmit a memóriában,
              szekvenciáliasan, pufferelve olvassa a fájlt, így elég
              gyors, de sok kézimunkát igényel, hiszen nekünk kell
              tárolni, hogy most épp melyik objektumhoz tartozó adatokat
              olvassuk be, stb... A DOM ezzel szemben beolvassa az egész
              dokumentumot, és egy fát épít fel, mely csomópontonként
              tartalmazza a tag-eket, attribútumokat. Ez sok memóriát
              foglal, de egyszerűsíti a feldolgozást, hiszen az egész XML
              feldolgozás egy fabejárássá alakul át.</p>
					<p>
               A JAXB még egy ennél magasabb absztrakciós szintet
              képvisel, ugyanis itt az objektumok leképzése nem manuálisan
              történik programból, hanem egy sémával tudjuk megadni. Tehát
              először rendelkezésünkre áll egy XML fájl, annak megadunk
              egy sémát, hogy milyen objektummá képezze le. Ezután egy
              utility segítségével osztályt generálhatunk a sémából, és
              ezután már használhatjuk mindkét irányú lepépzést. Egyrészt
              az XML dokumentumokból automatikusan generálhatunk egy
              objektum fát (azokból az objektumokból, melyeket az előbb
              generáltunk), illetve az objektumfából generálhatunk egy XML
              fájlt.
             </p>
					<em>
              Viczi, 2003. március 18.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030329"/>
					<p>
						A
              Borland kiadta a J2EE szoftver platform elnevezésű komplett
              megoldását Java <a href="http://www.terminal.hu/newsread.php?id=20200703032114">fejlesztések
              hatékonyságának</a> növelése érdekében. A <a href="http://www.borland.hu/j2ee/index.html">csomag</a> egy
              alkalmazás fejlesztési életciklusának összes lépésére ajánl
              megoldást, úgymint a követelmény analízishez, elemzéshez és
              tervezéshez, fejlesztéshez (természetesen nem csak egyének,
              hanem csoportok számára), teszteléshez és finombeállításhoz,
              valamint üzembe helyezéshez. A csomag tartalmazza a Borland
              Enterprise Server alkalmazás szerver, Borland Enterprise
              Studio (Together tervező eszköz, JBuilder integrált
              keretrendszer, Optimizeit Suite profiler) szoftvereket.</p>
					<p>
               Követelmény analízisre a CaliberRM terméket, csoportmunka
              kezelésre a StarTeam terméket és adatbázis kezelésre a
              tejesen Java-ban implementált relációs-adatbázis kezelőt, a
              JDataStore-t kínálják.
             </p>
					<em>
              Viczi, 2003. március 29..
             </em>
				</div>
				<div class="centerbox">
					<a name="20030330"/>
					<p>
						<!-- http://www.root.hu/?c=3519&amp;PHPSESSID=ff676f9055181b6bb1a4450ebcdbb32d -->
              Nem igazán Java-val kapcsolatos a 
              hír, de szerintem sok Java programozó találkozott már,
              vagy használja a <a href="http://www.mysql.com">MySQL</a>
              ingyenes (GPL és nem-GPL licensz alatt is elérhető)
              adatbáziskezelő rendszert. A hír, hogy <a href="http://lists.mysql.com/announce/160">
              megjelent</a> a MySQL 4.0.12-es verziója, mely már nem
              fejlesztői verzió (gamma), hanem production státuszba
              jutott. Ez azt is jelenti, hogy a 3.23-as sorozat
              fejlesztése lassan megszűnik (utolsó jelenleg a 56), így
              érdemes upgrade-elni.</p>
					<p>
               A 4-es sorozat jelentős <a href="http://www.mysql.com/doc/en/Nutshell_4.0_features.html">újítással</a>
              rendelkezik a 3-as szériához képest, ami lassan lehetővé
              teszi komoly üzleti alkalmazások kiszolgálására is. Ilyen a
              jelentős sebesség növekedés (pl. lekérdezés cache), Embedded
              Server könyvtár beágyazott alkalmazások esetén, InnoDB
              tároló engine beépítése, a teljes szöveg indexelés, könnyebb
              átállhatóság más adatbázisokról (TRUNCATE TABLE, IDENTITY,
              UNION), német nyelv (karakter set) jobb támogatása és több
              kisebb javítás, funkció. A legjelentősebb ezek közül
              szerintem az InnoDB beépítése, mely biztosítja a tranzakció
              kezelést, külső kulcsok kezelését kaszkádolt update/delete
              műveletekhez és a soronkénti lockolási mechanizmust.</p>
					<p>
               Sajnos a subquery és SSL támogatás csak a <a href="http://www.mysql.com/doc/en/News-4.1.0.html">4.1
              verzióban</a>
						<a href="http://www.prog.hu/news.php?qnid=1126">jelenik majd</a>
              meg, és a tárolt eljárások, külső kulcsok alapján
              integritásellenőrzésre és kurzor kezelés csak az 5.0
              verzióban. A 4.1.0 Alpha már letölthető.</p>
					<p>
               A termék oldalán megtalálható nagyon részletes
              dokumentáció, valamint grafikus kezelőfelület, ODBC
              (Connector/ODBC 3.51.06) és JDBC (Connector/J 3.0.6 STABLE,
              3.1.0 ALPHA) driver is. 
              <!-- http://www.root.hu/?c=3443 -->
              Ezen kívül képzést is
              tanusítványt is nyújtanak, partneri programot kínálnak és
              akár 7x24 órás telefonos support-ot is.</p>
					<p>
               A MySQL-hez már magyar <a href="http://www.kiskapu.hu/main.php?SHOW_BODY=termekinfo&amp;TERMEKINFO_ID=121401301">
              szakirodalom</a> is van, méghozzá a jóhírű O'Reilly könyv
              fordítása, melyet a Kossuth Kiadó adott ki. A könyv
              tartalmaz egy fejezetet az adatbáziskezelő Java
              alkalmazásból történő eléréséről is, sőt a "24 óra alatt"
              sorozatban is szerepel egy MySQL-ről szóló <a href="http://www.kiskapu.hu/main.php?SHOW_BODY=termekinfo&amp;TERMEKINFO_ID=121424001">
              könyv</a>.
             </p>
					<em>
              Viczi, 2003. március 30.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030331"/>
					<p>
              Megtudtam, hogy a Java platformfüggetlenségére milyen jó kis
              betűszót találtak ki: WORE (Write Once, Run Everywhere).
              Sokaknak ez lehet a mániája, hogy ilyen rövidítéseket
              találnak ki.</p>
					<p>
               A Sunnál két cikk is megjelent a web-es fejlesztésről
              (servlet, JSP), érdemes elolvasni, bár szerintem sok
              újdonságot nem nyújt. Az <a href="http://developer.java.sun.com/developer/community/chat/JavaLive/2003/jl0311.html">
              egyik</a> egy Java Live! chat log, mely a Java Servlet és
              JSP technológiáról szól, míg a <a href="http://java.sun.com/developer/technicalArticles/javaserverpages/servlets_jsp/">
              másik</a> egy Best Practices cikk, és a jól ismert
              ajánlásokat összegzi (pl. ne keverjük a HTML és Java kódot,
              ne keverjük a prezentációs réteget az üzleti logikával,
              custom tag-ek használata, filterek, portabilitás,
              perzisztencia, pooling, caching. Természetesen megemlíti a
              Model 1 és Model 2 architektúrákat is, melyből az utóbbi a
              MVC mintára épül.</p>
					<p>
               Az IBM programozási versenyt <a href="http://www.prog.hu/news.php?qnid=1360">hirdetett</a>
              egyetemisták (akár levelező vagy PhD) és főiskolások
              részére. A feladatot 48 óra alatt kell a három főből álló
              csapatoknak megoldania, SuSE V8.1 op. rendszer, IBM DB2 8.1
              adatbáziskezelő rendszer szoftverekre építve.
              Fejlesztőkörnyezet lehet egyszerű JDK, vagy akár WebSphere
              Studio Application Developer környezet WebSphere Application
              Server V5 alkalmazásszerverrel megtámogatva. Nevezni két
              korcsoportban lehetett (sajnos a nevezési határidő 2003.
              márc. 31.), és a nyeremények hardver, illetve szoftver (SuSE
              Linux, Rational, DB2, WebSphere). Sajna már nem aktuális, de
              akit érdekel, részletek a <a href="http://www.pmmf.hu/letolt/2003bajnoksagIBM.rtf">versenykiírásban</a>.</p>
					<p>

               Aki megnézi az előbb említett bejelentést a Prog.Hu-n,
              látja, hogy milyen szépen megváltozott a design-ja.</p>
					<p>
             </p>
					<em>
              Viczi, 2003. március 31.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030401"/>
					<p>
              A Microsoft bejelentette, hogy a Microsoft Visual Studio
              következő verziója már támogatni fogja a Java nyelv J2EE
              kiadását, hiszen ilyen jelentős techonlógiát nem lehet
              figyelmen kívül hagyni, és a Visual Studio csak így
              szerezheti meg azt a lehetőséget, hogy univerzális
              fejlesztőeszközzé váljon, mellyel minden programozási
              kihívást sikerrel lehet megoldani. Bill Gates kijelentette,
              hogy a Java nyelv támogatása nem okoz túl nagy erőfeszítést
              a Visual Studio-t készítő programozóknak, hiszen a .NET
              platform és a J2EE közel áll egymáshoz, hiszen a .NET
              fejlesztésekor erősen figyelembe vették a Java nyelv néhány
              jellegzetességét, újítását, és az osztálykönyvtár is mutat
              némi hasonlóságot.
             </p>
					<em>
              Viczi, 2003. ÁPRILIS 1.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030402"/>
					<p>
              Most olvastam a <a href="http://www.hwsw.hu/hir.php3?id=20271">hírt</a>, hogy az
              International World Wide Web Conference Committee (IW3C2) és
              a Magyar Tudományos Akadémia Számítástechnikai és
              Automatizálási Kutatóintézete (MTA SZTAKI) idén
              Magyarországon rendezi meg a <a href="http://www2003.sztaki.hu/">12. World Wide Web
              Konferenciát</a> május 20 és 24 között. A rendezvényt a
              miniszterelnök fogja megnyitni. Az első nap főleg elméleti
              előadások hallgathatóak, az ezt követő harmadik napon
              műszaki jellegű előadások lesznek szekciókra bontottan, majd
              az utolsó nap főleg a fejlesztőknek szól. (Ezért tették a
              végére. :) A részletes program megtalálható a honlapon. Az
              árak sajna nem olcsóak, a jegyek elővételben az 5 napra
              275000 Ft + ÁFA-ba kerülnek oktatási intézménytől független
              személyeknek. :(
             </p>
					<em>
              Viczi, 2003. április 2.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030410"/>
					<p>
              Érdemes néha beletekinteni a JSR-ek közé, hiszen néha
              nagyobb meglepetéseket rejthet. Gondolom már sokan <a href="http://www.eweek.com/article2/0,4149,1001600,00.asp">várjátok</a>
              a J2SE 1.5 változatát, kódnevén "Tiger" (a J2SE 1.4.1
              kódneve "Hopper", a J2SE 1.4.2 kódneve "Mantis"), melynek 
		  	  újdonságairól
              eddig csak netes beszélgetésekből (pl. 
              <a href="http://java.sun.com/features/2003/05/bloch_qa.html">Joshua Bloch-val</a>), 
              interjúkból lehetett
              értesülni. Érdemes megnézni a <a href="http://www.jcp.org/en/jsr/detail?id=175">175-ös számú</a>
              Specification Request-et, mely a nyelvi módosításokat
              tartalmazza, a <a href="http://www.jcp.org/en/jsr/detail?id=201">201-es számú</a>
              request-et, mely metadata facility-t vezetne be nyelvi
              szinten a Java-ba, a <a href="http://www.jcp.org/en/jsr/detail?id=014">14-es
              requestet</a>, mely a generikus típusokat vezetné be, és a
              <a href="http://www.jcp.org/en/jsr/detail?id=133">133-as
              requestet</a>, mely a Memory Model-t és Thread
              Spcification-t módisítaná.</p>
					<p>
               Az új verzió fejlesztésekor főleg négy területet tartanak
              szem előtt: a fejlesztés kényelme, monitorozás és
              managelhetőség, skálázhatóság és teljesítmény, valamint XML
              és kliens oldali Web szolgáltatások támogatása.</p>
					<p>
               A 201-es kiterjesztené a Java nyelvet <a href="http://jcp.org/aboutJava/communityprocess/jsr/tiger/enum.html">
              enumeration típussal</a>, <a href="http://jcp.org/aboutJava/communityprocess/jsr/tiger/autoboxing.html">
              autoboxing-gal</a>, <a href="http://jcp.org/aboutJava/communityprocess/jsr/tiger/enhanced-for.html">
              továbbfejlesztett ciklusokkal</a> és <a href="http://jcp.org/aboutJava/communityprocess/jsr/tiger/static-import.html">
              statikus importtal</a>. A linkelt dokumentumok részletesen
              leírják az új nyelvi elemek működését, szintaxisát. Az enum
              típus hasonlít a C és Pascal nyelvekben használatoshoz, de
              jelentős többlet lehetőséget is nyújtanak. Használatukkal
              elérhetünk fordítási idejű biztonságot, sebességnövekedést
              az int típusok konstansok használatához képest, namespace-t
              minden enumhoz (konstans nevek minősíthetőek), könnyebb
              olvashatóságot (nem a konstans érték jelenik meg, hanem már
              a név). Használhatók kollekciókban, mezők és metódusok
              adhatók hozzá, switch kifejezésben is használható. Az enum
              deklaráció egy speciális osztály deklaráció, mely önleíró
              tagokkal rendelkezik, melyek neve enum konstansok.</p>
					<p>
               A boxing tulajdonképpen automatikus típuskonverziót jelent
              a primitív típusok, és az ezeket burkoló, hozzájuk tartozó
              osztályok között. A kiterjesztett ciklus definíció egy
              egyszerűbb szintaxist ad a keszünkbe iterátoron való
              végiglépkedéshez. A statikus import megengedi statikus tagok
              (változók és metódusok) importálását, így elhagyható ezek
              minősítése.</p>
					<p>
               A metadata tulajdonképpen olyan spaciális adat, mely
              mezőkhöz, metódusokhoz és osztályokhoz kapcsolódik. Ilyen
              speciális adatok kellenek már JavaBeans esetén is (setter,
              getter metódusok), de általában a fejlesztő és deployment
              tool-ok is használnak ilyeneket. Cél egy olyan nyelvi elem
              kifejlesztése, melyekkel ezek az addícionális információk
              standard módon megadhatók (pl. @meta JavaDoc megjegyzéssel,
              vagy meta kulcsszóval), deployment vagy futási időben
              lekérdezhetők, illetve hozzájuk namespace rendelhető az
              azonos nevű attribútumok összekeverésének megelőzésére.</p>
					<p>
               Az egyik legizgalmasabb mégis a generikusok bevezetése,
              mely már sok (C++-ban jártas) programozónak hiányzott. A
              generikusok tulajdonképpen lehetővé teszik a paraméterezhető
              poliformizmust.</p>
					<p>
              </p>
					<p>
              A monitorozással és managelhetőséggel kapcsolatban nem fognak
              meglepődni azok, akik a JMX-et már használták a J2EE 
              alkalmazásokban, hiszen már a J2SE környezetben is lehetséges lesz
              a telepített alkalmazások épségének vizsgálata (kevés mamória, 
              hibakezelők és a stack trace API).</p>
					<p>
              Bekerül az XML 1.1, SAX 2.0 és DOM Level 3 szabványok támogatása is,
              viszont a többi XML-lel és webszolgáltatásokkal kapcsolatos
              API-kat ezután is a Web services pack-ben kell keresni. Emellett
              új opciók a sebesség növelésére és az indulás gyorsítására, mind
              kliens, minds szerver oldalon, megújult Look&amp;Feel-ek és
              skin-ezhetőség, Unicode 3.1 támogatás, továbbfejlesztett
              asynchronous IO, minden, mi szem-szájnak ingere.</p>
					<p>
               Benedek Balázs, a 24 órás programozói verseny főszervezője
              volt a vendége az <a href="http://www.origo.hu/techbazis/szoftver/20030409tiznemettel.html">
              Origó Társalgójának</a>. Az elektronikus elődöntő most
              szombaton!
             </p>
					<em>
              Viczi, 2003. április 10.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030427"/>
					<p>
             Némi kiesés után folytatnám. Sajnos a régi cím megszűnt egy kis
             rendszerösszeomlás miatt, így ezentúl a 
             http://dragon.unideb.hu/~vicziani/jtechlog.htm
             címen lesz elérhető az oldal, ami még szintén egy Debreceni Egyetemi 
             szerverén található, tehát kisebb-nagyobb kiesések mindig várhatók lesznek.
             </p>
					<p>
             Közben láthatjátok, oldalra kitettem egy kis Java Get It Now logót,
             ahonnan azonnal feltelepíthető a legújabb JRE (Java Runtime Environment),
             mely tartalmazza a Sun Java Plug-in-t is, így garantáltan minden
             Java kisalkalmazás (applet) megfelelően fog futni. Egyben letöltődik
             a Java Web Start is, mely egy környezet, mely egyszerűsíti Java-s
             web-alapú alkalmazások indítását és futtatását.</p>
					<p>
             Érdekes, hogy a Sun milyen <a href="http://www.sun.com/policies/trademarks/">feltételeket szab</a>
             a védjegyek és logók használatára. Persze ezzel az oldalammal kb. mindet megséretem, pl.
             a védjegyek csak jelzőként használhatóak (Java helyett Java platform, vagy Java
             programozási nyelv, Jini helyett Jini hálózati technológia), szóviccek
             elkerülése (nincs új a nap alatt...), R, TM, SM felsőindexek használata.</p>
					<p>
						<a href="http://logos.sun.com">Logót</a> sem lehet olyan egyszerűen szerezni, 
             hanem kérvényezni kell, amit pont úgy kell használni, ahogy le van írva. Hogy mennyit
             kerestem egy normális bögrét...</p>
					<p>
             Ezen kívül elindult egy <a href="http://java.sun.com/jugs/ambassador/">Sun Java User Group Ambassador</a> program is,
             mely egy új kezdeményezés, melynek célja nagykövetek kijelölése a Sun és egy
             JUG között. A nagykövet feladata a legújabb Java technológiák figyelemmel
             követése, és azok előadása a JUG tagjainak (legalább évente négyszer, legalább 25 tag előtt), 
             melyhez rendszeres időközönként a Sun-tól kap anyagokat. Írtam is nekik vagy
             két hete, de nem jött válasz.</p>
					<p>
             A JUGok (Java User Group) emberek egy olyan csoportja, kik
             érdeklődnek a Java nyelv és technológiák iránt, és rendszeresen
             találkoznak (akár virtuálisan is) a tapasztalataik, ötleteik
             megosztása céljából, problémáik megoldására.</p>
					<p>
						<a href="http://servlet.java.sun.com/jugs/europe/hun">Magyarországon</a> is van három JUG, kettő a 
             <!-- http://mobidiak.klte.hu, http://jgroup.math.klte.hu/ -->
             Debreceni Egyetem keretin belül (Java Fun Club, 
             JFC ENTERPRISE - JFCE)
             melyeknek végzős koromban én is tagja voltam, illetve Budapesten
             a Hungarian Java Users' Group (Java Felhasználók Társasága), mely
             keretében jelentkeztem a nagyköveti programra. 1996-ban alakult, tevékenysége főleg
             online, azaz a <a href="http://javasite.bme.hu/javalist/">levelezőlista</a> és
             <a href="http://javasite.bme.hu">honlap</a> használatára korlátozódik. Jelenleg 51 tagot számlálunk,
             de Te is<a href="http://servlet.java.sun.com/jugs/europe/hun/budapest">beléphetsz</a>, ha rendszeresen
             használod a listát!
             </p>
					<em>
              Viczi, 2003. április 27.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030428"/>
					<p>
             Az O'Reilly könyvek sokunknak okoztak már kellemes perceket,
             és a kiadó jelenleg egy újabb  <a href="http://www.prog.hu/news.php?qnid=1470">meglepetessel</a> rukkolt elő.
             Összesen 157 darab könyvet <a href="http://creativecommons.org/projects/founderscopyright/oreilly">jelölt ki</a>, 
             melynek szerzőjét szeretné meggyőzni,
             hogy könyvüket az Attribution licensz alá vonják, ami azt jelentené,
             hogy amíg a szerzőt is feltüntetik, ingyenesen lehet másolni és
             használni.</p>
					<p>
             Ezen kívül további 394 könyvet tervez szerzőik hozzájárulásával
             olyan licensz alá vonni, mely esetén a könyvek 14, indokolt esetben 28 
             év után ingyenesen elérhetők lesznek elektronikus formában. Ezen könyvek jobban
             érdekelnének, hiszen az előbbi lista már főleg kifutott könyveket tartalmaz,
             és sajnos ezen könyvek is így járnak 14, pláne 28 év múlva.</p>
					<p>
             A Mannig Publications Co. is elindított egy programot, Early 
             Access néven, mely lehetővé teszi, hogy előre meg lehessen 
             vásárolni e-book-okat, melyek még nincsenek készen, és ahogy a fejezetek
             elkészülnek, az ember letöltheti őket. Az első ilyen könyv a 
             <a href="http://www.manning.com/gallardo/index.html">Eclipse in Action</a>,
			 melyből már 5 fejezet letölthető (a 9-ből).</p>
					<p>
			 A Manning adja ki azokat a könyveket melyek elején szép ruhába öltözött
			 bácsik állnak, és elérhetőek mind nyomtatott, mind elektronikus könyv (PDF)
			 alakban. <a href="http://www.manning.com/catalog/java/">Java</a>
			 technológiákról is rengeteg könyvük szól, és egy párból példa 
			 fejezet is elérhető (<a href="#20030210">ld. 2003. feb. 10)</a>,
			 és azóta az <a href="http://www.theserverside.com/articles/article.jsp?l=AspectJReview">AspectJ In Action</a>
			 könyvből is letölthető egy fejezet.</p>
					<p>
			 Ha már az Eclipse is szóba került, akkor örömmel jelenthetem,
			 hogy <a href="">kijött</a> a 2.1-es verzió rengeteg újítással,
			 pl. javított workbench navigáció, konfigurálható billentyűzet
			 kiosztás, új Ant támogatás illetve refaktorizációs (szép szó)
			 műveletek. Az Eclipse varázsát nekem a rengeteg
			 <a href="http://eclipse-plugins.2y.net/eclipse/index.jsp">letölthető
			 plugin</a> adja, amely rengeteg nyílt forráskódú eszközhöz
			 ad interfészt, grafikus felületbe való illesztést.</p>
					<p>
             </p>
					<em>
              Viczi, 2003. április 28.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030429"/>
					<p>
             Egyre több MIDP 1.0-t támogató 
             <a href="http://java.sun.com/webapps/device/device">eszköz</a> jön ki, és már a
             MIDP 2.0 szabvány is megjelent, így érdemes egy kicsit
             a <a href="http://java.sun.com/j2me/">J2ME technológiákról</a>,
             a <a href="http://developers.sun.com/techtopics/mobility/">vezeték nélküli</a>
             eszközökre való fejlesztésről is szólni.</p>
					<p>
             A J2ME bevezetése sem szakít a hagyományokkal, célja egy olyan 
             felület biztosítása a programozók számára, mely minden eszközön ugyanolyan,
             legyen az mobiltelefon, PDA vagy más egyéb. Tehát fő cél a platformfüggetlenség,
             az alkalmazások hordozhatósága. Mivel a telefonok korlátolt erőforrásokkal rendelkeznek (még),
             nem lehetséges a JVM átültetése ezekre, hanem létrehoztak egy 
             új VM-et KVM (Kilo Virtual Machine) néven, melynek neve arra utal, hogy
             kilobyte-okban is elfér. Erre épül a CLDC (Connected Limited Device Configuration) mely az
             alapvető Java komponenseket specifikálja (típusok, osztályok, I/O, hálózatkezelés),
             és erre pedig a MIDP (Mobile Information Device Profile), mely a 
             magasszintű API-kat, felhasználói interfész, életciklus és esemény kezelést 
             tartalmazza.</p>
					<p>
             Fejlesztéshez szükségünk van egy J2SE SDK-ra, illetve a <a href="http://java.sun.com/products/j2mewtoolkit/index.html">J2ME
             Wireless Toolkit</a>-re, mely egy grafikus fejlesztő környezet.
			 Persze ez utóbbi nélkül is elkezdhető a fejlesztés, hiszen a 
			 Java fordítónak ha a J2ME osztálykönyvtárat adjuk meg (-bootclasspath),
			 akkor parancssorból is fordíthatóak a MIDlet-ek, melyek maguk az
			 alkalmazások. Illetve a legtöbb fejlesztőkörnyezetnek is van illesztése
			 mobil környezethez.</p>
					<p>
			 Aki többre kíváncsi, az nézze meg Bilicki Vilmos 
			 Fejlett Programozási Technológiák 2 (Szegedi Tudományegyetem) 
			 tantárgyhoz készült <a href="http://www.cab.u-szeged.hu/~bilickiv/fpt_2003_1/index.html">prezentációit</a>,
			 melyek kimerítően tárgyalják a J2ME technológiákat.</p>
					<p>
			 Csak hogy lássuk, mit lehet mobil eszközökön véghezvinni,
			 érdemes megnézni a <a href="">Mascot Capsulate Engine Micro3D Edition</a>
			 keretrendszert, mely 3D játékok (!!!) fejlesztéséhez nyújt segítséget. 
			 Az oldalon egy Java applet is megtalálható a példák között, mely prezentálja az engine
			 képességeit. Ez az alapja az első Európában is terjesztett mobilos 3D játékoknak is,
			 melyekhez a Vodafone live! szolgáltatás kereteiben lehet hozzájutni.
			 Érződik, hogy nagy hangsúlyt fektetnek a játékokra, hiszen a MIDP 2.0-ba
			 bekerült egy új API, Game API néven, mely layereket, sprite-okat tud kezelni,
			 így egy akciójátékot hamar össze lehet dobni.</p>
					<p>
			 </p>
					<div class="centerimgbrd">
					<img src="http://www.blueboard.com/j2me/images2/j2me_family.gif" alt="J2ME Family" width="650" height="202"/>
					</div>
					<em>
              Viczi, 2003. április 29.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030504"/>
					<p>
             2003. május 13-án, 9 órától lesz a Hotel Mercure Buda szállóban az Oracle
             <a href="http://www.oracle.com/webapps/events/EventsDetail.jsp?p_eventId=10164&amp;src=1411394&amp;src=1411394&amp;Act=32">XML adatbázis funkcionalitás</a>
             című rendezvénye, mely az Oracle adatbáziskezelő 9.1 XMLDB nevű
             natív adatbázis funkcionalitást fogja bemutatni. Ennek segítségével 
             az XML struktúrák natív szinten leképezhetők relációs, vagy 
             objektum-relációs adatbázis struktúrákra, így csökkentve a 
             fejlesztés idejét, bonyolult API-k ismeretét, illetve
             kiküszöböli a külső transzformációkat. Az előadások bemutatják
             a kapcsolódó szabványokat, lehetséges megoldásokat.</p>
					<p>
             A <a href="http://www.datadirect-technologies.com/">DataDirect Technologies</a>
             arról híres, hogy 3rd party ODBC és JDBC driver-eket ír az összes
             nagynevű adatbázis szerverhez (mint a DB2, Oracle, SQL Server, Informix és
             Sybase), melyek gyorsabbak és megbízhatóbbak, mint az alapesetben
             hozzájuk járó driverek. Előfordult, hogy egy termék beépítve a
             DataDirect driver-ének egy régebbi verzióját tartalmazta. Ezen
             kívül egységes felületet nyújt az alkalmazások számára 
             eltérő adatbáziskezelők
             esetén is. Nemrégiben az IBM-mel közösen bejelentették,
             hogy az IBM WebSphere Application Server és WebSphere Express nevű
             termékeihez Connect for JDBC szoftver komponenst adják, mely biztosítja
             a JDBC elérést a legtöbb adatbáziskezelőhöz. A DataDirect az 
             egyetlen gyártó, mely mindegyikhez Type 4 JDBC drivert biztosít.
             </p>
					<em>
              Viczi, 2003. május 4.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030505"/>
					<p>
             Kicsit offtopic leszek, arról szeretnék beszámolni, hogy David
             Axmark (MySQL alapítójóinak egyike) és Zak Greant, a MySQL két fontos alakja fog az
             ELTE Radnóti Miklós Gyakorlóiskolában (Budapest, Cházár A. u 10)
             május 12-én, hétfőn 5 órakkor két előadást tartani. Az egyik a 
             MySQL történetéről és jövőjéről (4.1 és 5.0) szól, a másik biztonságos PHP/MySQL
             alkalmazások fejlesztéséről. Az előadások a 
             Neumann János Számítógép-tudományi Társaság PHP 
             Szakosztályának első találkozójának keretein belül fognak elhangozni.
             A részvétel ingyenes, de előzetesen a részvételi szándékot jelezni
             kell a rendezvény <a href="http://phpinfo.wish.hu/modules.php?op=modload&amp;name=News&amp;file=article&amp;sid=515">honlapján</a>.</p>
					<p>
             Hogy a Java világból is említsek valamit, a Borland <a href="http://www.prog.hu/news.php?qnid=1496">bejelentette</a> a
             JBuilder 9-et, melynek újdonságai továbbfejlesztett debugger,
             reverse és forward engineering és az alkalmazásszerverekhez való
             illesztés támogatása. Ezen kívül tartalmazni fogja az életciklus-management
             rendszert is.</p>
					<p>
             A C# Builder részeként jelenik meg a Janeva, mely biztosítani fogja az
             átjárást .NEt és Java, illetve CORBA között.</p>
					<p>
             </p>
					<em>
              Viczi, 2003. május 5.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030521"/>
					<p>
             Megint egy kissé lemaradtam.
             Útközben volt egy <a href="http://www.challenge24.org">3. nemzetközi 24 órás programozó és csapatverseny</a>,
             melyen én is részt vettem két csapattársammal, Klampeczki (C++) Zsolttal
             és Erdei (Java) Szabolccsal. Csapatunk neve KergeBirge volt, és sikerült a 3. helyezést
             elérnünk, immár harmadszor. :) A honlapon a részletes eredmények, képek,
             és a feladat is megtalálható, érdemes megtekinteni. Zsolt közülünk C++ nyelven
             programozott, Szabolccsal ketten Java-ban.</p>
					<p>
             Természetesen JBuilder-rel fejlesztettem, hiszen grafikus interfészt is 
             kellett fejleszteni, meg amúgy is kényelmesebb. No az előbbit még csak most 
             teszteltem le rendesen, de eléggé csalódtam. Szerencsére nem generál bele
             meta-data-t, mint az IBM VisualAge For Java, és a megjelenítése is gyorsabb,
             de abban az esetben, ha egy JFrame-mel dolgozok, és rajta egy JPanel-lel, érdekes
             dolgok történnek. Két nézet van, egyrészt ahol a frame tulajdonságait tudom szerkeszteni,
             illetve a menüsort, másrészt a konkrét panelt. Nos ezek között a váltás elég
             gyeszora, sajnos be kell zárni a fájlt, és újra betölteni. :(</p>
					<p>
             Másik érdekes fejlemény akkor jött ki, mikor több transzparens GIF képet szerettem
             volna betölteni, és egy nagy Graphics-ra rátenni, különböző pozíciókra. A háttér
             létrehozása java.awt.Component.createImage(int width, int height) metódussal történt,
             a kis képek betöltése Image img = new ImageIcon(aFileName).getImage(); sorral. Abban
             az esetben, ha abszolút hivatkozást adtam meg egy fájlra, és ciklusból azt többször tettem
             rá, müködött. Ha abszolút hivatokzást adtam meg, és több fájlt akartam
             használni, nem működött. Ezzel szórakoztam egy órát, majd az összes fájlt
             bemásoltam a class fájlok közé, nem adtam meg elérési útvonalat, és ment minden.
             Kell nekem egy versenyen egy ilyen bugba beleakadni. Aki tudja, hogy ez miért van,
             írjon.</p>
					<p>
             Kellemes tapasztalataim voltak viszont az először használt 
             <a href="http://www.cs.umd.edu/hcil/jazz/">Piccolo</a>-val, amit
             a Marylandi Egyetemen fejlesztenek, szabad forráskódú 
             Zoomable User Interface (ZUI). Tulajdonképpen egy grafikus
             keretrendszer felhasználói felületek fejlesztésére, mely 
             lehetővé teszi a zoomolást, több kamera használatát, layereket,
             képeket, stb. A Piccolo a Jazz utódja, ez utóbbi fejlesztése
             már abbamaradt, a fejlesztők ezen rendszer kifejlesztésekor
             szerzett tapasztalatokat használják fel egy hasonló funkcionalitású, de
             egyszerűbben használható rendszer megírására. A csomag természetesen
             bőséges dokumentációt és példaprogramot tartalmaz.</p>
					<p>
             Tulajdonképpen egy Canvas-ról van szó, melyet a szokásos módon illeszthetünk be
             alkalmazásunkba, és ezekre fa struktúrában kölönböző objektumokat helyezhetünk el.
             Ezen objektumok lehetnek egyszerű geometriai alakzatok (téglalap, sokszög),
             görbe, szöveg vagy akár kép is. A megjelenített kép tetszőlegesen zoomolható és
             scrollozható. Ezek eseméynkezelői testre szabhatóak. Ezen kívül az elhelyezett
             objektumoknak is van külön eseménykezelője, melyet implementálhatunk, de akár
             a beépítettet is használhatjuk, mely lehetővé teszi az objektumok (akár
             csoportos) kijelölését, mozgatását, átméretezését, szerkesztését. Nagy segítség,
             hogy klikkeléskor nem a panel koordinátáit adja vissza, hanem a tényleges
             koordináta-rendszerre vissza transzformáltat. Támogatja az objektumok
             áttetszőségét is.
             </p>
					<em>
              Viczi, 2003. május 21.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030526"/>
					<p>
             Az NJSZT Újklub (IEEE CS-NJSZT Fórum) 
             <a href="http://stf.rgai.hu/">Szoftvertechnológiai Fórum</a>
             negyedik előadása 2003. június 4-én 9.30-kor kerül megrendezésre
             a BME Ch épület (Szent Gellért tér 4.) C14-es termében. A
             rendezvény címe Web szolgáltatások a gyakorlatban és két
             előadást foglal magába. Distributed applications without limits, előadója
             Frank Leymann (IBM Germany), illetve Perzisztencia megoldások Java Technológiával,
             előadói Molnár István és Simon Géza (Sun Microsystems Hungary).
             Az előbbi célja a Web szolgáltatások bemutatása, míg az utóbbi a
             a Java alapú perzisztencia megvalósításokról szól, érintve a
             Data Access Objects (DAO), Java Data Objects (JDO), 
             Entity Enterprise Java Beans (EJB) with Container and Bean Managed Persistence 
             (CMP and BMP, respectively), Object-Relational Mapping, stb. technológiákat.
             Jelentkezni a <a href="mailto:biro.agnes@kfki.com">biro.agnes@kfki.hu</a>
             címen lehet 2003 május 31-ig. A részvétel díjtalan.
             </p>
					<em>
              Viczi, 2003. május 26.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030529"/>
					<p>
						<img src="http://www.prog.hu/site/text/quicknews/01536/javaone.gif" alt="JavaOne" width="429" height="205" class="leftimgbrd"/>
             2003. június 10 és 13 között rendezik meg a következő 
             <a href="http://servlet.java.sun.com/javaone/sf2003/home/index.en.jsp">JavaOne
             konferenciát</a>, San Francisco-ban, Kalifornia államban.
             Több mint 200 előadás lesz, különböző témákra osztva, mint
             Core Technology, mobil eszközök, vállalati alkalmazások, webes
             alkalmazások, web szolgáltatások, asztali alkalmazások, hálózati technikák,
             technológiák és sikersztorik. Ez évi rendezvény egyik újdonsága
             Hands-on Labs-ok, melyek 2 órás gyakorlati előadásokkal mutatják be
             az új technológiákat.</p>
					<p>
             Információk is szivárognak ki, méghozzá egy új 
             <a href="http://www.prog.hu/news.php?qnid=1536">fejlesztőeszközről</a>,
             mely egyszerűsítené a fejlesztést, grafikusan megtámogatva a leggyakoribb
             feladatokat. Főbb jellemzői a moduláris komponensek, XML és 
             természetesen korunk leghangzatosabb technológiája, a web szolgáltatások
             támogatása.
             </p>
					<p>
             Az IBM által felvásárolt, és mint külön brandként futó Rational
             több új eszközt jelentett be, ahogy a 
             <a href="http://www.prog.hu/news.php?qnid=1531">Prog.Hu</a> és a
             <a href="http://www.hwsw.hu/hir.php3?id=21257">HWSW.hu is</a> írja.
             Rational Rapid Developer egy vizuális modell-alapú fejlesztői környezet és 
             képes a Rose modellekből J2EE alkalmazást gyártani.
             Az XDE Tester, ami Eclipse alapú, Java kliensek és webes
             alkalmazások tesztelést támogatja majd. A Extended Development Experience
             az XDE termékcsaládot integrálja az elterjedtebb fejlesztőkörnyezetekbe.
             Az <a href="http://www.ibm.com/software/rational/offerings/design.html">XDE Developer</a> 
             pedig egy komplett tervező- és fejlesztőeszköz,
             mely integrálja a különböző alkalmazásokat, megóva minket a kapcsolgatásoktól,
             segítve az alkalmazások, nézetek közti szinkronizációt. Együttműködik
             a IBM WebSphere, Eclipse, és Microsoft Visual Studio .NET környezetekkel is.
             A DeveloperPlus ehhez képest egy vizuális debuggerrel bővebb. 
             </p>
					<em>
              Viczi, 2003. május 29.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030530"/>
					<p>
             Nemsokára <a href="http://java.sun.com/j2se/1.4.2/reference/whitepapers/index.html">megjelenik</a> 
             a J2SE v1.4.2, jelenleg a bétája már 
             <a href="http://java.sun.com/j2se/1.4.2/download.html">letölthető</a>.
             Ez első változtatás, mellyel először találkozik egy Windows-os felhasználó,
             hogy a telepítőcsomag két változata is letölthető, egyrészt egy
             Windows Offline Installation, mely a telepítéshez szükséges összes
             komponenst tartalmazza, illetve egy  Windows Installation, mely 
             csak 274 kilobájtos, és csak azokat a komponenseket tölti le a webről, melyekre
             tényleg szükség van. Ezen komponensek lehetnek források, demók, JRE,
             Java Plug-in böngészőbe, különböző nyelvi támogatások, betűtípusok,  
             és media támogatás. A fejlesztő környezetet mindenképp
             installálni kell.</p>
					<p>
             A főbb újítások persze a bugfixek (2700 db !!!), két új Swinges 
             look-and-feel (Windows XP és GTK+ 2.0), Java Plug-in fejlesztések és
             a 64-bites Intel Itanium 2 processzor jobb támogatása.</p>
					<p>
             Megemlítendő az NTLM autentikáció HTTP protokoll felett,
             ActiveX Bridge támogatás és Linuxosoknak az ALSA hangrendszer támogatása.
             A Java Web Start is elérte az 1.4.2-es verziószámot. Emellett
             sebességnövekedés is megfigyelhető, valamint a javadoc utilon is
             javítottak.</p>
					<p>
             Olvasható egy <a href="http://java.sun.com/developer/community/chat/JavaLive/2003/jl0429.html">beszélgetés</a>
             a Sun-nál a J2SE 1.4.2 csapat főbb tagjaival, 
             HotSpot JVM fejlesztéséért felelős Ken Russell-lel, JFC/Swing fejlesztéseket vezető Scott Violet-tel, 
             és a Deployment (Java Web Start/Plug-In) technikai vezetővel, Stanley Ho-val.</p>
					<p>
             A Sun <a href="http://java.sun.com/developer/technicalArticles/ThirdParty/RSSFeeds/">elindította</a> a
             <a href="http://java.sun.com/industry/contentsyndication/">Content Syndication Programot</a>, 
             ami azt jelenti, hogy a főlapon megjelenő híreket egy 
             XML formátumban (RSS) is el lehet érni, így egyrészt desktop hírolvasó
             alkalmazásokkal is le lehet tölteni, másrészt pl. portálokon automatikusan
             be lehet emelni a híreket, saját design-t adva neki.Három fő téma van: 
             Java Technology Highlights, Wireless Technology Highlights és
             Solaris Technology Highlights.</p>
					<p>
             Az <a href="http://www.xml.com/pub/a/2002/12/18/dive-into-xml.html">RSS</a>
             formátum egy XML alkalmazás, melyet a Netscape kezdett el fejleszteni
             hír alapú oldalak leírására, így jól használható online naplóknál, blogoknál is.
             Természetesen itt is van egy kis kavar a verziószámokba, mert miután a Netscape felhagyott
             a dologgal, ketten is rámozdultak, párhuzamosan, és jó kis 
             inkompatibilitás lett a vége. A lényeg, hogy egy jól használható,
             szöveges, formai megjelenéstől mentes formátum, melyet könnyen lehet
             feldolgozni.
             </p>
					<em>
              Viczi, 2003. május 30.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030603"/>
					<p>
             Találtam egy érdekes terméket az <a href="http://www.ejbsolutions.com/">EJB Solutions
             honlapján</a>, ami Out-of-the-Box 2.0 névre hallgat.
             Nem másról van szó, mint több mint 100 Open Source Project 
             becsomagolásáról, egységes telepítő felület hozzáadásáról, illetve
             automatikus konfigurálásáról. Természetesen a csomag Java
             fejlesztőknek szól, és olyan projectek kerültek bele,
             mint a JBoss, Tomcat, Struts, Eclipse, Hibernate, 
             AspectJ, MySQL, PostgreSQL, CVS, stb.
             Ezen kívül tartalmaz Ant alapú minta alkalmazásokat is.
             Támogatja a Windows és Linux platformot egyaránt.
             A telepítő cucca nagyon designos, választhatunk, hogy mely
             komponenseket telepítsük fel, mi a project honlapja,
             licensze, használt portok, rövid leírása. A projecteket
             kategóriákba sorolja.
             Leírja az előfeltételeket is (milyen szoftvereknek
             kell már fenn lenniük), illetve a tőle függő szoftvereket is.
             Sajnos nem ingyenes, 70 dollár körül mozog. 
             Viszont van egy ingyenes verziója is (Community Edition), mely
             csak 25 projectet tartalmaz, illetve egy minta projectet is.</p>
					<p>
             Egy érdekes project még a <a href="http://jcharts.sourceforge.net/">jCharts</a> 
             nevű ingyenes grafikongeneráló könyvtár. Teljesen Java nyelven
             íródott, támogatja a szervleteket és a JSP-t is. Több
             grafikon típust is támogat, úgymint pie, axis, area, bar, line,
             point, stock, combo. Tetszőlegesen konfigurálható a
             jelmagyarázat, háttér. átlátszóság, kliens oldali image map.
             Az 1.4-es Java futtatókörnyezet már lehetővé teszi 
             X Server (és virtual frame buffer) nélkül is képek generálását, 
             ekkor a java-t a következő paraméterrel kell indítani, 
             <code>-Djava.awt.headless=true</code>, vagy a kódban kell elhelyeni a következő sort:
             </p>
					<pre>
             	System.setProperty("java.awt.headless","true"); 
             </pre>
					<p>
             Régebbi környezeteknél virtual frame buffer ajánlott.
             </p>
					<em>
              Viczi, 2003. június 3.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030608"/>
					<p>
						<img src="http://www.w3.org/Icons/w3c_main" alt="World Wide Web Consurtium" width="315" height="48" class="rightimgbrd"/>             
              Befejeződött a Budapesten rendezett WWW2003 nemzetközi konferencia még
             május 20-án, melynek W3C előadásai 
             <a href="http://www.w3.org/2003/03/w3c-track03.html">letölthetőek</a> 
             a <a href="http://www.w3c.hu/">magyar iroda</a> honlapján.</p>
					<p>
             A <a href="http://www.w3.org/">W3C</a> (World Wide Web Consortium) egy független konzorcium,
             mely fejlesztőket, szoftvercégeket és tudományos
             szervezetek (kb. 450 tag). A W3C 1994-ben alakult, célja világhálóval kapcsolatos ajánlások,
             szabványok kidolgozása, melyek biztosítják
             annak fejlődését, illetve a különböző szereplők 
             weben keresztüli együttműködését. Nevükhöz fűződik a
             HTML, XHTML, CSS, DOM, MathML, SVG, PNG (nemrég jött ki az ajánlás második kiadása),
             XML és hozzá kötődő rengeteg technológia (megközelítően 50 technikai
             specifikáció).</p>
					<p>
             A W3C főbb <a href="http://w3c.sztaki.hu/forditasok/7pont.html">céljai</a> az univerzális elérés (független hardvertől, szoftvertől,
             anyanyelvtől, kultúrától, stb...), szemantikus web kialakítása (jelentésen alapuló,
             számítógép által is értelmezhető, feldolgozható web) és bizalom 
             (mely lehetővé teszi a Weben való felelős publikálást).</p>
					<p>
             Mivel a Web az Interneten alapul, örökli annak alapvető
             tervezési elveit, mint az együttműködés (komponens alapú, a komponensek
             cserélhetőek), levezethetőség (egyszerűség, modularitás, kompatibilitás, és kiterjeszthetőség),
             és decentralizálás.
             Volt egy kis <a href="http://www.hwsw.hu/hir.php3?id=21299">kavar</a> 
             is nemrég, méghozzá a W3C egy olyan 
             javaslatot tett, hogy a szabványok létrehozásában
             közreműködő cégek díjat szedjenek az ajánlásokban felhasznált
             technológiák alkalmazása után. Szerencsére ez is
             megoldódott, Budapesten írták alá a  W3C Patent Policy-t,
             mely a technológiák jogdíj nélküli alkalmazását teszi lehetővé.</p>
					<p>
             Van egy jó kis oktató site-ja is <a href="http://www.w3schools.com">W3Schools</a>
             néven. Itt a legtöbb technológiával kapcsolatban tutorial olvasható.
             mely segíti a megértést. A következő tutorialok találhatóak itt meg:
             HTML, CSS, XHTML, WAP/WML, XML, XSL, DTD, DOM, SOAP, XSchema,
             XForms, JavaScript, DHTML, VBScript, WMLScript, Flash, ASP, SQL, ADO.
             </p>
					<p>
             A magyar iroda 2002 szeptember 1-én alakult. Feladatok bemutatók,
             kurzusok, prezentációk szervezése a W3C technológiákkal kapcsolatban,
             segítség konferenciák szervezésében, fordítások koordinálása,
             weboldal fejlesztése, havi hírlevél kiadása magyar nyelven.
             </p>
					<em>
              Viczi, 2003. június 8.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030609"/>
					<p>
             Úgy tűnik a Sun meg akarja lovagolni a J2ME sikerét a
             játékgyártásban, és 
             beszáll a játékiparba, mint ahogy a
             <a href="http://www.prog.hu/news.php?qnid=1563">Prog.Hu</a> és a
             <a href="http://www.sg.hu/cikk.php?cid=27827">Supergamez</a>
             is írja. Persze nem játékokat fog gyártani, hanem segédeszközöket
             és könyvtárakat bocsájt a fejlesztők rendelkezésére. Ennek első
             lépéseként megalapította a Game Technologies Group divíziót,
             és élére Chris Melissinos-t állította. Természetesen a fő
             vesszőparipa a platformfüggetlenség és a hálózat, hiszen 
             rengeteg Java-képes,
             hálózatba kötött eszköz van a piacon, és ezeknek csak egy része a 
             személyi számítógépek. A Sun mind szerver, mind kliens oldalon 
             támogatást kíván nyújtani, és cáfolja, hogy Java nyelven
             nem lehet hasonló grafikájú programokat fejleszteni, mint C++ nyelven.
             Cél ipari szabványok és framework kifejlesztése, mely 
             mely egyszerű programozói felületet nyújt online multiplayer játékok
             kifejlesztésére, ahol a kliensek bármilyen Java-képes eszközök lehetnek.
             Az online központja a kezdeményezésnek a 
             <a href="http://www.javagaming.org">Javagaming.org</a> lenne,
             melyet a következő napokban jelentősen átalakítanak, jelenleg
             egy fórumrendszer üzemel rajta.</p>
					<p>
             Természetesen a JavaONE konferencia egyik fő témája is ez lesz,
             több játékfejlesztő cég képviselője is 
             <a href="http://www.terminal.hu/newsread.php?id=11201406035612">előadást, illetve demót tart</a> 
             a fejlesztéseikről.
             </p>
					<em>
              Viczi, 2003. június 9.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030610"/>
					<p>
             Ma jelentették be a JavaOne konferencián, és ma indult be a 
             <a href="http://www.java.net/index.html">java.net</a>,
             mely célja egy közösség kialakítása Java programozókból,
             rajongókból, hogy együtt dolgozhassanak projecteken és megoszthassák és
             megvitathassák az ötleteiket, tapasztalataikat. A
             tipikus kommunikációs módokon kívül (levelezőlisták és fórumok)
             a java.net blog, wiki, RSS szolgáltatásokat is nyújt, valamint
             támogatja az elosztott fejlesztéseket (levelezőlista, 
             verziókövetés - CVS, hibakezelés, fájl megosztás, hírek, wiki, blog).
             </p>
					<p>
             A fő cél a kódmegosztás. Már most is több project fut,
             néhány közülük:  Java Desktop (grafikus felületekkel
             foglalkozóknak), Java Web Services and XML (na vajon?), Java
			 Games, Project JXTA (P2P kommunikációs framework), Jini, 
			 JavaJar (saját project indítása), Java Patterns,  
			 és a NetBeans[tm].</p>
					<p>
			 Több cég is csatlakozott már a kezdeményezéshez, mint a 
			 Borland, Compuware, Cysive, DigiSlice, ObjectVenture, Quest,
			 Software AG, Systinet, és Zero G. Ezen kívül csatlakozhatnak
			 egyetemek, JUG-ok, vagy akár magánszemélyek is.</p>
					<p>
			 Egyik kedvencem a Javapedia project, mely egy wiki alapú
			 enciklopédiája a Java technológiáknak, melynek egy bejegyzése
			 szólhat könyvtárakról, keretrendszerekről, alkalmazásokról, 
			 segédeszközökről, képzésekről és mindenről, aminek bármi kis 
			 köze is van a Java nyelvhez. Tervezett egy kis történelem,
			 Java nagyjainak bemutatása, a Java nyelv viszonya más programozási
			 nyelvekhez, esettanulmányok, stb... Jelenleg még nagyon kezdeti 
			 stádiumba van, de bárki beszállhat a szerkesztésébe.
             </p>
					<em>
              Viczi, 2003. június 10.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030630"/>
					<p>
             2003. június 13-án befejeződött a Sun egyik legnagyobb rendezvénye,
             a JavaOne konferencia. A fő mottót, "Java Everywhere", úgy látszik
             sikerült bizonyítani, hiszen a Java platform jelen van mind 
             nagyvállalati alkalmazásoknál, mind kliens gépeken, vagy akár
             vezetéknélküli eszközökön. Néhány szám:
             </p>
					<ul>
						<li>A Fortune 500 cég mindegyike használ Java technológiát.</li>
						<li>Informatikai igazgatók 78%-a szerint a Java a legjobb platform a webszolgáltatásoknak.</li>
						<li>Java technológia majdnem 550 millió személyi számítógépen jelen van.</li>
						<li>Több mint 150 Java-képes mobil eszköz van forgalomban 22 gyártótól.</li>
						<li>A profi programozók majdnem 74%-a tekinti a Java programozási nyelvet
             	elsődlegesnek, szemben azzal az 51%-kal, amely Visual Basic programozási nyelvet
             	használ.</li>
					</ul>
					<p>
             A Java technológia már az űrben is meg fog jelenni, hiszen a Jet 
             Propulsion Laboratory szakemberei a 
             <a href="http://java.com/en/explore/everywhere/mars_rover.jsp">Mars Exploraton Rover (marsjáró)</a>
             szerkezetet a real-time specification for Java technology, Java3D és Java Advanced Imaging felhasználásával
             irányítják.</p>
					<p>
             Fő cél egy 10 milliós fejlesztői társadalom kialakítása, a jelenlegi 3
             millióval szemben. Segítendő ezt a törekvést a Sun a következőket
             nyújtja:
             </p>
					<ul>
						<li>Project Rave - fejlesztőeszköz</li>
						<li>J2SE 1.5, J2EE 1.5</li>
						<li>Scripting Java Specification Request (JSR) - híd a Java és a script nyelvek között</li>
						<li>Project Relator - mobil eszközökre tartalomfejlesztő eszköz</li>
						<li>Sun ONE Studio 5, Standard Edition és NetBeans 3.5 fejlesztőeszközök</li>
						<li>
							<a href="http://wwws.sun.com/software/jini/">Jini Starter Kit 2.0</a> - dinamikus
               hálózatkezelési megoldásokhoz használható eszköz, fejlett biztonsági
               funkciókkal</li>
						<li>Sun Developer Network - fejlesztői közösség támogatására</li>
					</ul>
					<p>
             Jeles cégek szakemberei is előadást tartottak, pl. jelen voltak a
             General Electric, Vodafone, Borland, Oracle, és SAP  képviselői is.
             Persze a Sun is rengeteg dolgot <a href="http://www.sun.com/aboutsun/media/presskits/javaone2003/">jelentett be</a>, 
             technológiai újdonságokat, eszközöket, <a href="http://www.java.com/en/index.jsp">ügyfél</a> és 
             <a href="http://www.java.net/index.html">fejlesztői</a> közösségeket, jövőképüket, 
             <a href="http://www.prog.hu/news.php?qnid=1577">terveiket</a>. Egyik
             fő ilyen a <a href="http://wwws.sun.com/software/products/projectrave/">Project Rave</a> bejelentése, mely egy eszköz többrétegű,
             elosztott, vállalati alkalmazások egyszerű fejlesztésére, maximálisan
             kihasználva a grafikus interfész előnyeit.</p>
					<p>
             A konferencia anyaga online is 
             <a href="http://javaoneonline.mentorware.net/">elérhető</a>.
             </p>
					<em>
              Viczi, 2003. június 30.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030701"/>
					<img src="http://www.omg.org/images/homepage/omg-home.gif" alt="Object Management Group" width="187" height="74" class="leftimgbrd"/>
					<p>
             Azon neves alkalomból, hogy  
             <a href="http://www.prog.hu/news.php?qnid=1617">megjelent</a>
             és <a href="http://java.sun.com/j2se/1.4.2/download.html">letölthető</a> a Java 2 SDK 1.4.2-es
             verziója, muszáj írnom egy kicsit a JavaONE konferencia óta történt 
             dolgokról, hiszen nem állt meg az élet azóta sem.
             </p>
					<p>
             Az új verzió újdonságairól már írtam régebben, annyit érdemes 
             még megjegyezni, hogy letölthető egy olyan verzió is, mely
             magában foglalja a NetBeans IDE 3.5 ingyenes integrált
             fejlesztőkörnyezetet is. A Java appletek evvel a verzióval gyorsabban
             indulnak, és ez Intel 64 Itanium processzoron is működik a JIT fordító.
             Egyik leglatvanyosabb bugfix a sokkal gyorsabb JFileChooser. Ezen
             kívül szerver oldali optimalizációhoz két új szemétgyűjtő
             algoritmus is bekerült a JVM-be, melyek a következő kapcsolókkal
             állíthatóak be: concurrent collector <code>-XX:+UseConcMarkSweepGC</code>, 
             parallel collector <code>-XX:+UseParallelGC</code>
					</p>
					<p> 
             A Sun és Microsoft között több mint egy éve húzódó per is újabb 
             <a href="http://www.prog.hu/news.php?qnid=1615">stációhoz</a> érkezett, 
             ezúttal a Microsoftnak kedvezve azzal, hogy mégsem kell 
             operációs rendszereibe beépítenie a Java futtató környezetet.</p>
					<p>
             Azért nem kell megijednünk, hogy elnyomják szegény Java nyelvet,
             hiszen a JavaONE-on a HP és a Dell is bejelentette, hogy minden
             Linux operációs rendszerrel felszerelt asztali számítógépüket 
             és laptopukat feltelepített Java platformmal szállítanak.</p>
					<p>
             Emellett az Intel és a Sun 
             <a href="http://www.terminal.hu/newsread.php?id=11203206032916">együttműködik</a>, 
             hogy az Intel XScale
             processzorokra Java alapú, minőségi alkalmazásokat fejlesszenek.
             Ennek keretében a CLDC Hotspot implementációját optimalizálja 
             ezen processzorokra, majd a gyártók rendelkezésére bocsájtja 
             azt.</p>
					<p>
             Egy kicsit offtopic, de remek 
             <a href="http://www.hwsw.hu/oldal.php3?cikkid=826&amp;oldal=1">cikk</a> 
             olvasható a HWSW.hu oldalain az Object Management Group-ról (OMG), 
             és június 12-én tartott
             OMG napok budapesti rendezvényről. Elöljáróban annyit, hogy az 
             <a href="http://www.omg.org/">OMG</a>
             egy non-profit nemzetközi szervezet, melynek tagjai cégek és magánszemélyek,
             egy-egy előírás elfogadása szavazással történik. Feladata elosztott és
             objektumorientált vállalati alkalmazásokkal foglalkozó előírások
             készítése és fejlesztése. Az OMG legjelentősebb specifikációi
             a következők: MOF (Meta Object Facility), UML (Unified Modeling Language),
             CWM (Common Warehouse Model), XMI (XML Metadata Interchange) és a
             CORBA (Common Object Request Broker Architecture).
             </p>
					<em>
              Viczi, 2003. július 1.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030903"/>
					<p>
             Nos, egy hosszabb nyári szünet, és munkahely váltás (részletek a <a href="index.html">főoldalon</a>)
             után folytatódik, újraindul a JTechLog. Remélem addig is olvastátok <a href="http://blog.si.hu">Joe
             blogját</a>, ami naponta frissült, és jobbnál jobb cikkeket ajánlott figyelmünkbe.</p>
					<p>
             Mostanában a Web Start-tal kellett foglalkoznom, ami a J2SE JDK 1.4.2-es verziójával a JDK része lett,
             és ő maga is ezt a verziószámot kapta. A Java Web Start (JAWS) nem más, mint a
             <a href="http://jcp.org/en/jsr/detail?id=056">JSR 56</a>,
             azaz a Java Network Launching Protocol &amp; Application Programming Interface referencia implementációja.
             A WebStart tulajdonképpen egy deploy környezet, mely jelentősen egyszerűsíti Java alkalmazások 
             telepítését kliens gépekre. Gyakorlatban a felhasználó annyit érzékel ebből, hogy a böngészőben egy
             linkre kattintva automatikusan települ a Java alkalmazás, majd elindul. Természetesen a szoftver 
             frissítéseket sem neki kell végeznie, azt a környezet automatikusan megteszi. A háttérben eközben
             annyi <a href="http://java.sun.com/products/javawebstart/architecture.html">játszódik le</a>, hogy a link egy JNLP állományra mutat (alkalmazás leíró, ez tartalmazza a
             telepítéshez szükséges adatokat, letöltendő JAR fájlokat és URL-jüket, stb.), melyet a böngésző 
             továbbad a Web Start-nak, ami értelmezve ezt letölti az alkalmazást, és futtatja azt. A JAR
             fájlokat cache-eli, és így következő alkalommal nem kell letölteni azt, csak ha változott (amit a 
             háttérben ellenőriz). Kliens oldalon ehhez csak a Java Web Start telepítésére van szükség,
             szerver oldalon bármelyik web-szerver állhat, lényeg, hogy definiáljuk benne a JNLP MIME típust.</p>
					<p>
             Persze felmerül a kérdés, hogy több kliens esetén nem érné-e meg inkább web-es alkalmazást fejleszteni,
             de a vastag klienseknek, és önálló alkalmazásoknak is megvan a maguk 
             <a href="http://java.sun.com/features/2001/09/webstart.html">létjogosultsága</a>, hiszen offline
             módon is üzemelnek, és sokkal robosztusabb felhasználói felülettel rendelkezhetnek, futásuk nem függ a 
             sávszélességtől. Hátrányuk a lassabb kezdeti letöltés.  A következő lehetőségeket támogatja:</p>
					<ul>
						<li>Több JRE egyidejű kezelése, az alkalmazásunkra megadhatjuk, hogy melyikkel kompatibilis. A
               	hiányzó JRE-t automatikusan letölti.</li>
						<li>Az alkalmazás egy sandbox-ban fut, így nem engedi elérni lokális erőforrásokat vagy a hálózatot,
               natív könyvtárakat betölteni, nem lehet új security manager-t betölteni, rendszertulajdonságokat
               elérni. Kommunikációt csak a gazdaszerverrel folytathat. Ahhoz, hogy ezek a korlátozások megszűnjenek, a
               JAR fájlokat alá kell írni, illetve a felhasználónak engedélyeznie kell. Persze alapszolgáltatásokat
               nyújt, mint egy URL megnyitását, hozzáférést a vágólaphoz, nyomtatóhoz, felhasználó által vezérelt fájlkezelés
               és egy cookie-khoz (itt muffin-nak hívják :) hasonló perzisztenciát, persze mind csak kontrollált környezetben.</li>
						<li>Verziókezelés is inkrementális update.</li>
						<li>Desktop integráció: a letöltött alkalmazást aztán a 
               Desktop-ról, Start menüből (presze Windows esetén), a webről és a Web Start Application Manager-éből is
               indíthatjuk.</li>
					</ul>
					<p>A Web Start a HTML protokollt használja, és a JDK 1.1 már nem támogatott az eltérő biztonsági mechanizmus miatt.
             Egy alkalmazás Web Start-tal való kezelhetőségének alkalmassá tételére nem kell mást csinálni, mint
             egy JAR fájlba csomagolni azt, és aláírni, ha speciális műveleteket is szeretne végezni. Ha csak
             ellenőrzött módba akar futni, akkor érdemes a Service osztályokat használni, melynek API dokumentációja megtalálható
             a Web Start dokumentációi között.</p>
					<em>
              Viczi, 2003. szeptember 3.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030904"/>
					<p>
             Kaptam egy meghívót az első Sun ONE Cafe-ra, mely 2003 szeptember 23-án 9 órától lesz az Art'otel-ben
             (1011 Bp., Bem rkp. 16-19.). Az esemény 1,5 órás lesz, és szó lesz az Orion-ról, mely a Sun
             ONE szoftverek integrált licszenszelési formája, majd természetesen a webszolgáltatások kiépítésének
             elősegítésére a Sun ONE Web Server 6.1-ről és a Sun ONE Application Server 7 EE-ről lesz szó. A rendezvény 
             ingyenes, a jelentkezési szándékot szeptember 22-ig kell <a href="mailto:katalin.boroczfy@sun.com">Boróczfy Katalinnak</a> jelenteni.
             </p>
					<em>
              Viczi, 2003. szeptember 4.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030907"/>
					<p>
				<img src="http://java.sun.com/blueprints/guidelines/designing_enterprise_applications_2e/images/app-archa2.gif" alt="Model-View-Controller" width="516" height="361" class="leftimgbrd"/>
             Többször is szó esett az MVC technikáról, így most kifejtem, mit is jelent az a 3 betű. A
             <a href="http://www.enode.com/x/markup/tutorial/mvc.html ">Model-View-Controller</a> rövidítése, ami nem más, mint egy tervezési minta a felhasználói felületek
             megvalósításához. Először a Smalltalk-80 grafikus framework-jében jelent meg, tulajdonképpen egy
             technika a prezentációs réteg és az üzleti logika szétválasztására.</p>
					<p>
             Három egymással kommunikáló objektumból áll, egyrészt a modellből, mely a logikai reprezentációt
             végzi (tulajdonképpen ez a feldolgozó rész, tartalmazza az adattárolást és a rajta 
             végzett műveleteket), egy viewból, mely a megjelenítést vezérli, hogy hogy legyen az adat
             megjelenítve (output rész),
             illetve egy controller, mely a bevitelért felelős, hogy reagáljon egy komponens a bevitelre (input).</p>
					<p>
             Hogy miért is hasznos ez a technika, szemben azzal, hogy jelentős tervezési és fejlesztési munkával jár?
             Egyrészt nagyban megkönnyíti a karbantartást, hiszen átlátható, a GUI és a modell egymástól viszonylag 
             függetlenül módosítható, illetve egy modellhez több view-t is regisztrálhatunk.</p>
					<p>
             Sajnos azért nem ennyire egyszerű, főleg ha a 
             <a href="http://c2.com/cgi/wiki?ModelViewControllerAsAnAggregateDesignPattern">tervezési minták felöl</a> közelítjük meg a dolgot, hiszen 
             többet is találunk benne. 
             Egyrészt a modell hierarchikus is lehet, ekkor a Composite pattern-ről beszélünk. 
             A modelltől a view felé a kapcsolat viszonylag laza, hiszen a modellnek nem szükséges tudnia, hogy kik
             a view-k. Ekkor az Observer minta használható, ahol a modell az observable és a view-k az observer-ek.
             Ezt tipikusan eseményekkel valósítják meg. A cél az, hogy amint a modell állapotot változtat,
             az összes view-nak (1-n kapcsolat) erről értesülnie kell anélkül, hogy a modell tudná, mely view-ok figyelik.
             A visszafele irány már szoros, hiszen a view-nak pontosan ismernie kell a modellt. A controller-nek
             pontosan ismernie kell a modellt és a view-t is. A view-tól a controller felé szintén lazább a kapcsolat, hiszen
             a controller-nek cserélhetőnek kell lennie.
             A controller Strategy mintát valósítja meg, aminek az a tartalma, hogy az algoritmuscsaládokat zárjuk egységbe,
             és tegyük őket felcserélhetővé. Ezáltal az algoritmusok cserélhetők az őket használó kliensek
             módosítása nélkül.</p>
					<p>
             A <a href="http://java.sun.com/developer/onlineTraining/GUI/Swing2/shortcourse.html#JFCMVC">Swing komponensei</a> 
             is alapvetően az MVC mintára épülnek annyi változtatással, hogy a Sun
             szakemberei összevonták a view és a controller objektumot, és delegate-nek nevezték el.
             Ez azért logikus lépés, mert a kettő közti kommunikáció megvalósítása általában bonyolult, pláne ha 
             több view-ról és controller-ről beszélünk. Másrészt pl. egy textfield logikusan maga végzi a bevitelt
             és a megjelenítést is, illetve sok komponens beépített kontroll elemeket is tartalmaz, pl. scrollbar-t egy
             szövegbeviteli mező. Az IBM VisualAge for Java kitünően 
             <a href="http://www.software.ibm.com/vad.nsf/Data/Document2672?OpenDocument&amp;p=1&amp;BCT=1&amp;Footer=1">támogatja az MVC mintát</a>.
             </p>
					<em>
              Viczi, 2003. szeptember 7.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030908"/>
					<p>
             Ha már tegnap az MVC mintáról volt szó, akkor folytassuk is ott, hiszen az MVC nem csak a vastagkliens
             alkalmazásoknál vethető be, hanem másmilyen prezentációs réteg alkalmazásánál is, mint pl.
             a webes alkalmazásoknál. Említettem már a 
             <a href="http://java.sun.com/blueprints/guidelines/designing_enterprise_applications_2e/web-tier/web-tier5.html">Model 1 és Model 2 architektúrát</a>, 
             melyen elnevezések a JSP specifikáció egy korai tervezetéből származnak, de a véglegesből eltávolították azokat,
             mégis sokan hivatkoznak rá még most is ezen a néven. Alapvető különbség, hogy a Model 1-nél a lapok megjelenítésére
             csak JSP kódot használnak, és ebben helyezik el, hogy mi legyen a következő lap. Így a logika meglehetősen szét van
             szórva, és csak statikus lapokhoz hasonló felépítésű site-okhoz használható. Abban az esetben, ha
             a karbantartás bonyolultá válik, és a soron következő lap nem határozható meg egyértelműen, érdemes
             áttérni a Model 2 architektúrúra. Ennek alapja, hogy egy központi szervlet dolgoz fel minden kérést
             és paramétert, továbbítja az üzleti logikának, majd kiválasztja a következő lapot, és a JSP
             csak a prezentációt végzi, és legenerálja a dinamikus lapot. Tehát tulajdonképpen ez a központi szervlet
             a controller, ami feldolgozza a kérést, és választja ki a következő view-t. Ez végezheti a biztonsági
             ellenőrzéseket és a loggolást is. A legtöbb framework ezt a mintát követi, mint pl. a Struts és a
             JavaServer Faces is, mindkettőről esett már szó korábban.</p>
					<p>
             Előnye ennek a megoldásnak, hogy szétválasztja a tervezési gondokat, csökkenti a kód
             duplikációt, egy központosított vezérlést vezet be és könnyíti a karbantartást.
             </p>
					<em>
              Viczi, 2003. szeptember 8.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030912"/>
					<p>
             2003 október 1-2-én lesz az idei 
             <a href="http://www.borland.hu/ent/normal/servlet/normal?name=/news/events/031001_bfn2003.html&amp;sitearea=news&amp;itemname=bfn2003">Borland Fejlesztői Napok</a> 
             a Thermál Hotel Margitszigetben.
             Két nemzetközi előadó is jelen lesz, David Intersimone (Fejlesztői Kapcsolatok alelnöke) és 
             Ludovic Neveu a Borland Software Corporation-től. 2003. szeptember 15-ig beérkezett regisztráció 
             esetén a részvételi díj 16 000,- Ft + áfa fejenként, később 20 000,- Ft! A fő téma az alkalmazásfejlesztés
             felgyorsítása csoportmunkában, szoftverek nem csak fejlesztőknek, hanem elemzőknek, tesztelőknek, üzemeltetőknek és 
             managereknek. Következő szekciók lesznek: RAD (Delphi, C++Builder, Kylix, InterBase), Java (JBuilder, Optimizeit), 
			 .NET (C# Builder). Ez az év a Borland születésének és a Turbo Pascal 1.0 megjelenésének 20. évfordulója.
			 Java fejlesztőknek érdekes lehet a Caliber RM-ről (követelménymeghatározás), JBuilder-ről (fejlesztőeszköz),
			 OptimizeIt-ről (tesztelés) és Borland Enterprise Server-ről szóló Borlandos
			 előadás, a Sunos Java 2, v1.4 és követői előadás, illetve a mobilos alkalmazásfejlesztésről szóló
			 Nokia előadás. Érdekes közös előadás lesz a Togetherről és Starteamről.
             </p>
					<em>
              Viczi, 2003. szeptember 12.
             </em>
				</div>
				<div class="centerbox">
					<a name="20030923"/>
					<p>
						<img src="http://developers.sun.com/events/sunnetwork/jes.gif" alt="Java Enterprise System" width="142" height="177" class="leftimgbrd"/>             
             Reggel lezajlott az első Sun ONE Cafe, melynek első témája a Project Orion volt, amit azóta már
             átnevezve mutattak be a <a href="http://developers.sun.com/events/sunnetwork/">SunNetwork 2003</a>
             konferencián, mint 
             <a href="http://wwws.sun.com/software/javasystem/index.html">Sun Java System</a>. Sokat 
             ködösítenek körülötte, de nem más, mint egy új brandnév, mely tartalmazza az összes Java technológiára
             épülő Sun terméket, meg egy pár olyant, ami nem Java alapú. Az alapötlet az volt, hogy mivel az 
             összes terméknek szorosan integrálható, miért ne rakják egybe, teszteljék ki, és adják a felhasználónak.
             Ez egyrészt kihat a szállításra, verziókezelésre és integrációra, árazásra, liszenszelésre, előzetes
             kalkulációkra. 
             Így megalkották a JES-t, melynek kiadása
             ezentúl negyedévente történik, alkalmazkodva az eddig jól bevált Solaris negyedéves verzióváltáshoz,
             és licenszelése is egységes, fix előfizetési díj van megállapítva, persz különböző, egyedi konstrukciók 
             is lehetségesek.</p>
					<p>
             A következő csomagokat tartalmazza: Java Enterprise System (JES), mely a szerver oldali szoftvereket 
             tartalmazza, Java Desktop System, mely az asztali számítógépekre van kitalálva, Java Mobility System, mobil
             felhasználóknak
             Java Card System, Java alapú intelligens kártyákra, Java Studio a fejlesztőknek és az N1, a hardverek és
             hálózat üzemeltetésére. A Java Enterprise System a következő szoftvereket tartalmazza: alkalmazásszerver,
             webszerver, directory server (címtár), identity server (azonosítás), portálszerver, integration server,
             messaging server (asszinkron kommunikációra), calendar és  instant messaging server 
             (belső kommunikációra, csoportmunkára), cluster (terhelésmegosztás), media server, grid engine, data
             services engine és provisioning. Tartalmazza a Solaris operációs rendszert is, de alternatívan
             az x86 és Linux platform is támogatott. Az 1.0-ás verzió előreláthatóan novemberben fog megjelenni,
             mely a következő verziókat tartalmazza: AS 7.0, Calendar Server 6.0, Directory Server 5.2, Directory
             Proxy 5.2, Idenity Server 6.1, Instant Messaging Server 6.1, Message Queue 3.0.1, Messaging Server 6.0,
             Portal Server 6.2, Portal Secure Remote Access 6.2,  Sun Cluster 3.1, Sun Cluster Agents, Web Server 6.1.
             A JES integrált szolgáltatásokat is tartalmazhat, mint architektúratervezés, üzembehelyezés, konzultáció,
             oktatási kredit, követés és támogatás.</p>
					<p>
             A reggeli második felén a Sun ONE Application Server 7 (kódnevén Hercules) EE HA szolgáltatásairól esett szó,
             mint a db és as cluster, illetve a  Sun ONE Webserver 6.1-ről, mely egy teljesen többszálas webszerver,
             ez a teljesítménymutatóin is meglátszik. Mindkettőt egy un. Watchdog figyeli, és ha valami hiba történik,
             automatikusan újraindítja.
             Java programozóknak hasznos információ, hogy a Tomcat 
             szervlet/JSP konténtert tartalmazza mindkettő. Kis perverzióval ASP-t is támogat a Webserver, hála a 
             nemrég felvásárolt
             ChiliSoft immár Sun ONE Active Server Pages 4.0 névvel futó alkalmazásának. Az AS következő verziója a 
             7.1 számot fogja viselni, Glaucus kódnévvel, de még nem lesz a JES-ben, hiszen csak Solaris-on támogatott, 
             de tervezett a többi platformra portolás is.</p>
					<p>A <a href="http://hu.sun.com/esemeny/publicesemeny/sunone_cafe/index.html">prezentációk</a> 
             letölthetők a rendezvény honlapjáról.
             </p>
					<em>
              Viczi, 2003. szept 23.
             </em>
				</div>
				<div class="centerbox">
					<a name="20031008"/>
					<p>
             Mostanában többször találkoztam az <a href="http://www.xdoclet.com">XDoclet</a> kód generátorral, lássuk, mi is ez. 
             Kezdem is két nagyon találó lefordíthatatlan kifejezéssel: metadata template engine, attribute-oriented programming,
             ami SZVSZ kicsit túlkapás egy ilyen eszköz esetén máris módszertanhoz hasonló elnevezést használni.
             Jelenleg az 1.2-beta3 a legutolsó
             verzió, de párhuzamosan megkezdődött a XDoclet 2 fejlesztése is. Az XDoclet eredetileg az EJB-k fejlesztésének egyszerűsítésére
             lett kitalálva, de ma már annál általánosabb. Tulajdonképpen különböző új tulajdonságokat adhatunk a Java kódhoz
             (speciális JavaDoc tag-ekkel), és az XDoclet ezek és a hozzájuk tartozó template-ek alapján generálhat különböző 
             leíró/telepítő XML fájlokat, illetve Java forráskódot is. Ezzel nem kell párhuzamosan frissíteni a meta-adatokat
             tartalmazó fájlokat és a forráskódot, hanem egy fájlban szerepelnek, így egyrészt szinkronban maradnak, könnyebben átláthatók, mégsem
             keveredik a meta-információ és a forráskód, és
             gyorsabb lesz a fejlesztés. Az XDoclet-nek már rengeteg, dinamikusan betöltődő modulja van (különböző alkalmazásszerverek - Bea, Borland, IBM, JBoss, Oracle, 
             stb.; keretrendszerek leíró fájljai - Apache Soap, Struts; EJB interfészek; JavaBean beaninfo; perzisztens rétegek 
             konfigurációs fájljai - Castor, Hibernate generálására), de saját modul fejlesztésére is lehetőség van. Az XDoclet jelenleg csak ANT
             build tool-lal használható együtt.</p>
					<p>
             Egy XDoclet tag egy névből áll, mely névtérrel van minősítve, illetve egy tulajdonság név - tulajdonság érték halmazból.
             Ilyen tag-eket lehet kapcsolni oszályhoz és metódushoz, ritkább esetben változóhoz vagy konstruktorhoz. Az XDoclet használatához
             definiálni kell egy ANT taskot, hogy pontosan mire is akarjuk használni (milyen típusú fájlokat akarunk generálni), és beállítani 
             a konfigurációs paramétereket (pl. forrás és célkönyvtár, stb.), melyek akár ANT property-k is lehetnek. 
             Beágyazott elemekkel tudunk alfeladatokat hívni, pl. EJB-k
             használatakor szükség van érték-objektumok, remote és local interfészek, home interfészek, telepítő fájlok generálására is.</p>
					<p>
             A XDoclet az engine-ből (template engine), XJavaDoc engine-ből (JavaDoc teljes átirata, mely 
             hatékonyabb, gyorsabb és rendelkezik néhány extra funkcióval), altaszkokból (mely kapcsolat az engine és a template-k között), 
             template-kből (statikus és dinamikus részekkel rendelkezik) és tag handler-ekből áll (tag-eket kezeli).</p>
					<p>
             Az XDoclet 2 projekt keretében teljesen átírják a kódot, egyszerűsítik az API-t saját modul (plug-in) írásához, szintaktikai 
             ellenőrző részt építenek bele, támogatni szeretnék a J2EE legújabb szabványait (EJB 2.1, Servlet 2.4, JSP 2.0), template engine-nek
             a Velocity-t és a Jelly-t (XML) használni, függetlenedni
             az ANT-tól, tervezési mintákat, JUnit teszt esetek és dummy objektumok generálását támogatni.</p>
					<p>
             Kíváncsi vagyok, mennyire fog hasonlítani ehhez a 1.5-ös Java-ban bevezetésre kerülő, hasonló problémák megoldására kitalált
             <a href="http://www.jcp.org/en/jsr/detail?id=175">Java Language Metadata (JSR 175)</a>.
             </p>
					<em>
              Viczi, 2003.  október 8.
             </em>
				</div>
				<div class="centerbox">
					<a name="20031102"/>
					<img src="http://java.sun.com/products/jaas/images/Swrd.jpg" alt="Java Security" width="105" height="150" class="rightimgbrd"/>
					<p>
             A Java2 SDK SE 1.4-nek rengeteg újítása volt, ezek közül egy csoport a 
             <a href="http://java.sun.com/j2se/1.4.2/docs/guide/security/index.html">biztonsági újdonságok</a>. Több API-t is integráltak a 
             fejlesztőkörnyezetbe, mint a Java Cryptography Extension (JCE), Java Secure Socket Extension (JSSE), és 
             <a href="http://java.sun.com/products/jaas/index.jsp">Java Authentication and Authorization Service (JAAS)</a>, melyek előzőleg
             opcionális csomagok voltak. 
             Ez utóbbiról szeretnék most írni, melynek két fő része a nevéből is kitatálható, autentikáció és autorizáció.</p>
					<p>
             Az előző verziókban biztonsági korlátozásokat csak az alapján lehetett felállítani, hogy az adott kód honnan származik (honnan
             lett letöltve), alá van-e írva, és ha igen, akkor ki által. Ezekre lehetett megszabni, hogy mely erőforrásokhoz férhet hozzá,
             és melyekhez nem. A <a href="http://java.sun.com/security/jaas/doc/acsac.html">JAAS</a> emellé bevezette a felhasználó szintű autentikációt és hozzáférés vezérlést. A szabványos 
             <a href="http://java.sun.com/security/jaas/doc/pam.html">Pluggable Authentication Module (PAM)</a> keretrendszer
             Java megvalósítása ez, mely egy API, ami elfedi a felhasználói programok elöl a különböző autentikációs technológiákat,
             és egységes autentikációs felületet nyújt, így egyszerű konfigurációval egyszerre több autentikációs modul használható, illetve
             kicserélhető az egyik a másikra.</p>
					<p>
             A JAAS Subject-nek nevezi a felhasználót, szolgáltatást vagy gépet, mely hozzá akar férni egy szolgáltatáshoz. Ugyanaz a Subject
             más neveken férhet hozzá különböző szolgáltatásokhoz, ezeket a neveket reprezentálja a Principal fogalom. Egy Subject-hez így 
             több Principal tartozhat. A Principal sikeres autentikációval rendelődik hozzá a Subject-hez. Az autentikáció az a biztonságos 
             folyamat, melynél a Subject igazolja az identitását, vagy egy olyan információval, melyet csak ő tud (jelszó, ujjlenyomat), vagy
             egy olyannal, melyet csak ő tud produkálni (privát kulccsal aláírt adat). A Credential
             single sign-on környezetben használt fogalom, és a Subject-hez társított biztonsággal kapcsolatos tulajdonságok halmaza,
			 pl. más szolgáltatáshoz való hozzáféréshez szükséges információk, pl. jelszavak, Kerberos ticket-ek, nyilvános kulcsú
			 bizonyítványok (X.509, PGP, stb.). A Credential nem feltétlenül tartalmazza ezeket az adatokat, egyszerűen tartalmazhat rájuk
			 hivatkozásokat, mikor az adat más szerveren vagy hardver elemen (smart card) van. Az ilyen tulajdonságoknak két csoportja van,
			 publikus és privát adatok.</p>
					<p>
			 A kliens a LoginContext-en keresztül kommunikál a JAAS-sal, mely a Configuration alapján példányosítja
			 és hívja a LoginModule-okat, melyek az autentikációt valósítják meg. A Configuration módosításával lehetséges egy LoginModule
			 kicserélése az alkalmazás módosítása nélkül. A LoginModule egy Callback-et ad vissza a kliensnek, mely definiálja, hogy mit kell
			 bekérni a felhasználótól. Ezt egy CallbackHandler-rel kell kezelni, mely a felveszi a tényleges kapcsolatot a felhasználóval.
			 A LoginModule-t írhatunk sajátot, vagy felhasználhatunk előre beépítettet, mely adott JNDI-hez, KeyStore-hoz, Kerberos-hoz,
			 UNIX rendszerekhez. Az autentikáció két lépésben történik, az első lépésben (login) minden LoginModule-nak ellenőriznie kell
			 a belépést, ha minden sikerült, a második lépésben (commit) véglegesíti azt. Ez utóbbi lépésben történik a Principal-ok és 
			 Credential-ok hozzáfűzése a Subject-hez.</p>
					<p>
			 A JAAS azt a konvencionális hozzáférési vezérlést követi,
             hogy definiál védett erőforrások csoportjait, és meghatározza, mely Principal-ok férhetnek hozzá ezen csoportokhoz. Ennek
             meghatározása a Javaban korábban már jelenlévő policy fájlal történik, melynek szintaktikáját kibővítették a felhasználó
             kezeléssel. A JAAS a csoportokat és szerepeket mint Principal kezeli. A PrincipalComparator-on keresztül szerephierarchiát
             lehet felépíteni. Az erőforrásokhoz való hozzáférést a SecurityManager-ek vezérlik, melyek ezt a feladatot delegálják a 
             AccessController-eknek, melyek a megkapott AccessControlContext-ból kinyerik, hogy van-e jog az adott tevékenységre.
             A Subject doAs vagy doAsPrivileged metódusával lehet meghívni azt a kódot, melyet egy Subject-ként futtatni fog. Át kell neki adni
             a Subject-et, magát az Action-t, mely run metódusa tartalmazza a kódot, illetve az AccessControlContext-et.</p>
					<p> 
             Egy remek <a href="http://java.sun.com/developer/technicalArticles/Security/jaasv2/">tutorial</a> olvasható
             erről a Sun-nál.
             </p>
					<em>
              Viczi, 2003. november 2.
             </em>
				</div>
				<div class="centerbox">
					<a name="20031121"/>
					<p>
             2003. december 9-én 9-től 10.30-ig ismét Sun Java Café rendezvény lesz a szokásos helyen - Art'otel (1011 Bp., Bem rkp. 16-19.).
             Szó esik a Project Rave-ről, mely egy új Java fejlesztőkörnyezet lesz, a J2EE SDK Beta-ról, a JES-ről, valamint
             kommunikációs és portál szoftverekről (Messaging Server, Calendar Server, Instant Messaging Server, Portal Server, Identity Server).
             Jelentkezni a <a href="mailto:katalin.boroczfy@sun.com">katalin.boroczfy@sun.com</a> e-mail címen lehet 2003. december 8-ig.</p>
					<p>
             A Motorola <a href="http://www.verseny.hu/">Java játékfejlesztői versenyt</a> indított ahová nevezni lehet kész megvalósításokkal,
             valamint tervekkel is. A leadási határidő 2004. január 4., a nyeremények 75,000 Ft, egy-egy mobiltelefon (ötlet/megvalósítás), illetve egy-egy
             ajándékcsomag (szintén ötlet/megvalósítás).
             </p>
					<em>
              Viczi, 2003. november 21.
             </em>
				</div>
			</div>

			<div id="rightside">
			  <div class="rightsidebox">
				<h1>Partnerek</h1>
				<ul>
					<li>
						<a href="http://www.javaforum.hu">JavaForum</a></li>
					<li>
						<a href="http://www.etus.hu/">Etus</a>, akinek sokat köszönhetek</li>
					<li>
						<a href="http://java.lap.hu/">java.lap.hu</a>
					</li>
				</ul>
				</div>
				<div class="rightsidebox">
				</div>
			</div>
